[APPLICATION]
VERSION 34
TODO ABC ToDo
DICTIONARY 'Invoice.dct'
PROCEDURE ParallelTests
[COMMON]
FROM ABC
MODIFIED '2021/10/24' '22:46:13'
[PROMPTS]
%ClassItem UNIQUE DEFAULT  ('ErrorManager', 'ErrorStatusManager', 'FileManager:', |
  'FileManager:Customers', 'FileManager:Detail', 'FileManager:DetailS', 'FileManager:Orders', |
  'FileManager:OrdersS', 'FileManager:Products', 'FuzzyMatcher', 'INIManager', 'RelationManager:', |
  'RelationManager:Customers', 'RelationManager:Detail', 'RelationManager:DetailS', |
  'RelationManager:Orders', 'RelationManager:OrdersS', 'RelationManager:Products', |
  'Translator')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 17
WHEN  ('ErrorManager') ('ErrorClass')
WHEN  ('ErrorStatusManager') ('ErrorStatusClass')
WHEN  ('FileManager:Customers') ('FileManager')
WHEN  ('FileManager:Detail') ('FileManager')
WHEN  ('FileManager:DetailS') ('FileManager')
WHEN  ('FileManager:Orders') ('FileManager')
WHEN  ('FileManager:OrdersS') ('FileManager')
WHEN  ('FileManager:Products') ('FileManager')
WHEN  ('FuzzyMatcher') ('FuzzyClass')
WHEN  ('INIManager') ('INIClass')
WHEN  ('RelationManager:Customers') ('RelationManager')
WHEN  ('RelationManager:Detail') ('RelationManager')
WHEN  ('RelationManager:DetailS') ('RelationManager')
WHEN  ('RelationManager:Orders') ('RelationManager')
WHEN  ('RelationManager:OrdersS') ('RelationManager')
WHEN  ('RelationManager:Products') ('RelationManager')
WHEN  ('Translator') ('TranslatorClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 17
WHEN  ('ErrorManager') ('')
WHEN  ('ErrorStatusManager') ('')
WHEN  ('FileManager:Customers') ('')
WHEN  ('FileManager:Detail') ('')
WHEN  ('FileManager:DetailS') ('')
WHEN  ('FileManager:Orders') ('')
WHEN  ('FileManager:OrdersS') ('')
WHEN  ('FileManager:Products') ('')
WHEN  ('FuzzyMatcher') ('')
WHEN  ('INIManager') ('')
WHEN  ('RelationManager:Customers') ('')
WHEN  ('RelationManager:Detail') ('')
WHEN  ('RelationManager:DetailS') ('')
WHEN  ('RelationManager:Orders') ('')
WHEN  ('RelationManager:OrdersS') ('')
WHEN  ('RelationManager:Products') ('')
WHEN  ('Translator') ('')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 8
WHEN  ('FileManager:Customers') ('Init {19}PROCEDURE(),DERIVED', 'Kill {19}PROCEDURE(),DERIVED', |
  'PrimeFields {12}PROCEDURE(),PROC,DERIVED', 'UseFile {16}PROCEDURE(BYTE UseType = UseType:Uses),BYTE,PROC,DERIVED')
WHEN  ('FileManager:Detail') ('Init {19}PROCEDURE(),DERIVED', 'Kill {19}PROCEDURE(),DERIVED', |
  'UseFile {16}PROCEDURE(BYTE UseType = UseType:Uses),BYTE,PROC,DERIVED', 'ValidateFieldServer    PROCEDURE(UNSIGNED Id,BYTE HandleErrors),BYTE,PROC,DERIVED')
WHEN  ('FileManager:Orders') ('Init {19}PROCEDURE(),DERIVED', 'Kill {19}PROCEDURE(),DERIVED', |
  'PrimeFields {12}PROCEDURE(),PROC,DERIVED', 'UseFile {16}PROCEDURE(BYTE UseType = UseType:Uses),BYTE,PROC,DERIVED', |
  'ValidateFieldServer    PROCEDURE(UNSIGNED Id,BYTE HandleErrors),BYTE,PROC,DERIVED')
WHEN  ('FileManager:Products') ('Init {19}PROCEDURE(),DERIVED', 'Kill {19}PROCEDURE(),DERIVED', |
  'UseFile {16}PROCEDURE(BYTE UseType = UseType:Uses),BYTE,PROC,DERIVED')
WHEN  ('RelationManager:Customers') ('Init {19}PROCEDURE', 'DeferedAddRelations    PROCEDURE(),DERIVED', |
  'Kill {19}PROCEDURE(),DERIVED')
WHEN  ('RelationManager:Detail') ('Init {19}PROCEDURE', 'DeferedAddRelations    PROCEDURE(),DERIVED', |
  'Kill {19}PROCEDURE(),DERIVED')
WHEN  ('RelationManager:Orders') ('Init {19}PROCEDURE', 'DeferedAddRelations    PROCEDURE(),DERIVED', |
  'Kill {19}PROCEDURE(),DERIVED')
WHEN  ('RelationManager:Products') ('Init {19}PROCEDURE', 'DeferedAddRelations    PROCEDURE(),DERIVED', |
  'Kill {19}PROCEDURE(),DERIVED')

%ProgramAuthor DEFAULT  ('')
%ProgramIcon DEFAULT  ('')
%MessageDescription LONG  (1)
%GlobalExternal LONG  (0)
%ExternalSource DEFAULT  ('Dynamic Link Library (DLL)')
%GenerateEmbedComments LONG  (0)
%INIType DEFAULT  ('NVD_INI')
%INIFile DEFAULT  ('Program Name.INI')
%ININame DEFAULT  ('')
%INIProgramIniLocation DEFAULT  ('APPDIR')
%INICSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%CSIDLCompanyDir DEFAULT  ('')
%CSIDLProductDir DEFAULT  ('')
%CSIDLCreate LONG  (0)
%INIInAppDirectory LONG  (1)
%REGRoot DEFAULT  ('REG_CLASSES_ROOT')
%DisableINISaveWindow LONG  (1)
%PreserveVars MULTI LONG  ()
%PreserveVar DEPEND %PreserveVars DEFAULT TIMES 0

%EnableRunTimeTranslator LONG  (0)
%FuzzyMatchingEnabled LONG  (0)
%IgnoreCase LONG  (1)
%WordOnly LONG  (0)
%ButtonMarginsCompatibility LONG  (0)
%UseDefaultXPManifest LONG  (0)
%GenerateXPManifest LONG  (0)
%LinkGenerateXPManifest LONG  (0)
%AddVistaXPManifest LONG  (0)
%VistaManifestExecutionLevel DEFAULT  ('asInvoker')
%VistaManifestUIAccess LONG  (0)
%NoThemedControlsDependency LONG  (0)
%VistaManifestdpiAware LONG  (1)
%VistaManifestDependentAssembly MULTI LONG  ()
%VistaManifestDependentAssemblyName DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyVersion DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyType DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyPublicKeyToken DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyLanguage DEPEND %VistaManifestDependentAssembly DEFAULT TIMES 0

%VistaManifestDependentAssemblyProcessorArchitecture DEPEND %VistaManifestDependentAssembly LONG TIMES 0

%W7ManifestVista LONG  (1)
%W7ManifestW7 LONG  (1)
%W7ManifestW8 LONG  (1)
%W7ManifestW81 LONG  (1)
%W7ManifestW10 LONG  (1)
%ForceMakeTransparentXPManifest LONG  (0)
%ForceMakeColorXPManifest LONG  (0)
%ForceSHEETNoTheme LONG  (0)
%ExtUIXPMenuEnableGlobal LONG  (0)
%ExtUIXPMenuColorTypeGlobal DEFAULT  ('OFF')
%ExtUIXPMenuDisableImageBar LONG  (1)
%ExtUIXPMenuEnableRuntime LONG  (0)
%ExtUIXPMenuRuntimeVar DEFAULT  ('')
%ExtUIXPMenuColorLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorRightGlobal LONG  (12560039)
%ExtUIXPMenuColorSelectionBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectionBarRightGlobal LONG  (15920364)
%ExtUIXPMenuSelVertical LONG  (1)
%ExtUIXPMenuColorSelectionBorderGlobal LONG  (15920364)
%ExtUIXPMenuColorHotLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorHotRightGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorSelectedRightGlobal LONG  (15920364)
%ExtUIXPMenuColorNormalBarLeftGlobal LONG  (15920364)
%ExtUIXPMenuColorNormalBarRightGlobal LONG  (15920364)
%ExtUIXPMenuColorItemBackgroundGlobal LONG  (-2147483644)
%ExtUIXPMenuColorNormalText LONG  (0)
%ExtUIXPMenuColorSelectedText LONG  (0)
%ExtUIXPMenuColorHotText LONG  (0)
%ExtUIXPMenuFlat LONG  (1)
%ExtUIXPMenuShowImageBar LONG  (0)
%ExtUIXPMenuSeparator3D LONG  (1)
%ExtUIXPMenuSeparatorFull LONG  (0)
%ExtUIXPMenuVerticalLine LONG  (1)
%ExtUIMDITabGlobal DEFAULT  ('DISABLE')
%ExtUIMDITabStyleGlobal DEFAULT  ('Default')
%ExtUITabStyleGlobal DEFAULT  ('Default')
%WindowEnableEnhanceFocus LONG  (0)
%SelectedText LONG  (1)
%SelectedRadio LONG  (1)
%SelectedSpin LONG  (1)
%SelectedCheck LONG  (1)
%SelectedDropList LONG  (1)
%SelectedList LONG  (1)
%SelectedDisplayChangeColor LONG  (1)
%SelectedColor LONG  (65535)
%SelectedStyle LONG  (1)
%SelectedRequired LONG  (0)
%SelectedRequiredColor LONG  (65535)
%SelectedDisplayBox LONG  (1)
%SelectedDisplayBoxFillColor LONG  (65535)
%SelectedDisplayBoxBorderColor LONG  (0)
%SelectedDisplayBoxBorderSize DEFAULT  ('2')
%SelectedRequiredBox LONG  (0)
%SelectedRequiredDisplayBoxFillColor LONG  (255)
%SelectedRequiredDisplayBoxBorderColor LONG  (0)
%SelectedCaret LONG  (1)
%SelectedCaretColor LONG  (8421504)
%SelectedCaretCharacter DEFAULT  ('»')
%SelectedCaretCharacterSeparation DEFAULT  ('8')
%ExcludeSelectedDropList LONG  (0)
%EnableOSK DEFAULT  ('OFF')
%GlobalUseEnterInsteadTab LONG  (0)
%GlobalUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalUseEnterInsteadTabEnable DEFAULT  ('Enable')
%GlobalUseEnterInsteadTabEnableValue DEFAULT  ('True')
%GlobalInterLine DEFAULT  ('0')
%GlobalEnableAutoSizeColumn LONG  (0)
%GlobalEnableListFormatManager LONG  (0)
%GlobalUserFieldListFormatManager DEFAULT  ('1')
%TableOrigin DEFAULT  ('Application')
%FileEquate DEFAULT  ('LFM_CFile')
%ConfigFilePRE DEFAULT  ('CFG')
%ConfigFileOEM LONG  (0)
%ConfigFileTHREAD LONG  (1)
%ConfigFileENCRYPT LONG  (0)
%ConfigFilePASSWORD DEFAULT  ('')
%FormatNameSize DEFAULT  ('30')
%FormatBufferSize DEFAULT  ('5120')
%VariableBufferSize DEFAULT  ('2048')
%ConfigFilePath DEFAULT  ('')
%UseConfigFileName DEFAULT  ('Default')
%ConfigFileNAME DEFAULT  ('Formats.FDB')
%ColonCounter DEFAULT  ('')
%WrongSymbol DEFAULT  ('')
%DictionaryTableOrigin FILE  ()
%GlobalLFMSortOrderMenuText DEFAULT  ('SortOrder')
%GlobalEnableRebase LONG  (0)
%RBDMethod DEFAULT  ('Specify manually')
%RBDImageBase DEFAULT  ('10000000')
%DefaultGenerate LONG  (0)
%DefaultRILogout LONG  (1)
%LockRecoverTime DEFAULT  ('10')
%DefaultThreaded DEFAULT  ('Use File Setting')
%DefaultCreate DEFAULT  ('Use File Setting')
%DefaultExternal DEFAULT  ('None External')
%DefaultLocalExternal LONG  (0)
%DefaultExternalSource DEFAULT  ('')
%DefaultExternalAPP LONG  (0)
%DefaultExport LONG  (0)
%DefaultOpenMode DEFAULT  ('Share')
%DefaultUserAccess DEFAULT  ('Read/Write')
%DefaultOtherAccess DEFAULT  ('Deny None')
%DefaultLazyOpen LONG  (1)
%GeneratePropDataPath LONG  (0)
%PropDataPathLocation DEFAULT  ('CSIDLLIKEINI')
%DataPathCSIDLDirectory DEFAULT  ('SV:CSIDL_PERSONAL')
%DataPathCSIDLCompanyDir DEFAULT  ('')
%DataPathCSIDLProductDir DEFAULT  ('')
%DataPathCSIDLCreate LONG  (0)
%DataPathOtherDirectory DEFAULT  ('')
%DataPathOtherDirectoryCreate LONG  (0)
%OverrideGenerate DEPEND %File LONG TIMES 0

%OverrideRILogout DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%GlobalObject DEPEND %ClassItem DEFAULT TIMES 17
WHEN  ('ErrorManager') ('YES')
WHEN  ('ErrorStatusManager') ('YES')
WHEN  ('FileManager:Customers') ('YES')
WHEN  ('FileManager:Detail') ('YES')
WHEN  ('FileManager:DetailS') ('YES')
WHEN  ('FileManager:Orders') ('YES')
WHEN  ('FileManager:OrdersS') ('YES')
WHEN  ('FileManager:Products') ('YES')
WHEN  ('FuzzyMatcher') ('YES')
WHEN  ('INIManager') ('YES')
WHEN  ('RelationManager:Customers') ('YES')
WHEN  ('RelationManager:Detail') ('YES')
WHEN  ('RelationManager:DetailS') ('YES')
WHEN  ('RelationManager:Orders') ('YES')
WHEN  ('RelationManager:OrdersS') ('YES')
WHEN  ('RelationManager:Products') ('YES')
WHEN  ('Translator') ('YES')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 17
WHEN  ('ErrorManager') ('GlobalErrors')
WHEN  ('ErrorStatusManager') ('GlobalErrorsStatus')
WHEN  ('FileManager:Customers') ('Hide:Access:Customers')
WHEN  ('FileManager:Detail') ('Hide:Access:Detail')
WHEN  ('FileManager:DetailS') ('Hide:Access:DetailS')
WHEN  ('FileManager:Orders') ('Hide:Access:Orders')
WHEN  ('FileManager:OrdersS') ('Hide:Access:OrdersS')
WHEN  ('FileManager:Products') ('Hide:Access:Products')
WHEN  ('FuzzyMatcher') ('FuzzyMatcher')
WHEN  ('INIManager') ('INIMgr')
WHEN  ('RelationManager:Customers') ('Hide:Relate:Customers')
WHEN  ('RelationManager:Detail') ('Hide:Relate:Detail')
WHEN  ('RelationManager:DetailS') ('Hide:Relate:DetailS')
WHEN  ('RelationManager:Orders') ('Hide:Relate:Orders')
WHEN  ('RelationManager:OrdersS') ('Hide:Relate:OrdersS')
WHEN  ('RelationManager:Products') ('Hide:Relate:Products')
WHEN  ('Translator') ('Translator')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 17
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FileManager:Customers') (1)
WHEN  ('FileManager:Detail') (1)
WHEN  ('FileManager:DetailS') (1)
WHEN  ('FileManager:Orders') (1)
WHEN  ('FileManager:OrdersS') (1)
WHEN  ('FileManager:Products') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('RelationManager:Customers') (1)
WHEN  ('RelationManager:Detail') (1)
WHEN  ('RelationManager:DetailS') (1)
WHEN  ('RelationManager:Orders') (1)
WHEN  ('RelationManager:OrdersS') (1)
WHEN  ('RelationManager:Products') (1)
WHEN  ('Translator') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 17
WHEN  ('ErrorManager') (1)
WHEN  ('ErrorStatusManager') (1)
WHEN  ('FileManager:Customers') (1)
WHEN  ('FileManager:Detail') (1)
WHEN  ('FileManager:DetailS') (1)
WHEN  ('FileManager:Orders') (1)
WHEN  ('FileManager:OrdersS') (1)
WHEN  ('FileManager:Products') (1)
WHEN  ('FuzzyMatcher') (1)
WHEN  ('INIManager') (1)
WHEN  ('RelationManager:Customers') (1)
WHEN  ('RelationManager:Detail') (1)
WHEN  ('RelationManager:DetailS') (1)
WHEN  ('RelationManager:Orders') (1)
WHEN  ('RelationManager:OrdersS') (1)
WHEN  ('RelationManager:Products') (1)
WHEN  ('Translator') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 17
WHEN  ('ErrorManager') ('')
WHEN  ('ErrorStatusManager') ('')
WHEN  ('FileManager:Customers') ('')
WHEN  ('FileManager:Detail') ('')
WHEN  ('FileManager:DetailS') ('')
WHEN  ('FileManager:Orders') ('')
WHEN  ('FileManager:OrdersS') ('')
WHEN  ('FileManager:Products') ('')
WHEN  ('FuzzyMatcher') ('')
WHEN  ('INIManager') ('')
WHEN  ('RelationManager:Customers') ('')
WHEN  ('RelationManager:Detail') ('')
WHEN  ('RelationManager:DetailS') ('')
WHEN  ('RelationManager:Orders') ('')
WHEN  ('RelationManager:OrdersS') ('')
WHEN  ('RelationManager:Products') ('')
WHEN  ('Translator') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 17
WHEN  ('ErrorManager') (0)
WHEN  ('ErrorStatusManager') (0)
WHEN  ('FileManager:Customers') (0)
WHEN  ('FileManager:Detail') (0)
WHEN  ('FileManager:DetailS') (0)
WHEN  ('FileManager:Orders') (0)
WHEN  ('FileManager:OrdersS') (0)
WHEN  ('FileManager:Products') (0)
WHEN  ('FuzzyMatcher') (0)
WHEN  ('INIManager') (0)
WHEN  ('RelationManager:Customers') (0)
WHEN  ('RelationManager:Detail') (0)
WHEN  ('RelationManager:DetailS') (0)
WHEN  ('RelationManager:Orders') (0)
WHEN  ('RelationManager:OrdersS') (0)
WHEN  ('RelationManager:Products') (0)
WHEN  ('Translator') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 3
WHEN  ('FuzzyMatcher')TIMES 0
WHEN  ('INIManager')TIMES 0
WHEN  ('RelationManager:Customers')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 3
WHEN  ('FuzzyMatcher')TIMES 0
WHEN  ('INIManager')TIMES 0
WHEN  ('RelationManager:Customers')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%OverrideThreaded DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%OverrideCreate DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%OverrideExternal DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%OverrideLocalExternal DEPEND %File LONG TIMES 0

%OverrideExternalSource DEPEND %File DEFAULT TIMES 0

%OverrideExternalAPP DEPEND %File LONG TIMES 0

%OverrideExport DEPEND %File LONG TIMES 0

%FileDeclarationMode DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use User Options')
WHEN  ('Customers') ('Use User Options')
WHEN  ('Detail') ('Use User Options')
WHEN  ('DetailS') ('Use User Options')
WHEN  ('Orders') ('Use User Options')
WHEN  ('OrdersS') ('Use User Options')
WHEN  ('Products') ('Use User Options')

%FileDeclarationType DEPEND %File LONG TIMES 7
WHEN  ('') (0)
WHEN  ('Customers') (0)
WHEN  ('Detail') (0)
WHEN  ('DetailS') (0)
WHEN  ('Orders') (0)
WHEN  ('OrdersS') (0)
WHEN  ('Products') (0)

%FileDeclarationThread DEPEND %File LONG TIMES 7
WHEN  ('') (0)
WHEN  ('Customers') (1)
WHEN  ('Detail') (1)
WHEN  ('DetailS') (1)
WHEN  ('Orders') (1)
WHEN  ('OrdersS') (1)
WHEN  ('Products') (1)

%FileDeclarationBindable DEPEND %File LONG TIMES 7
WHEN  ('') (1)
WHEN  ('Customers') (1)
WHEN  ('Detail') (1)
WHEN  ('DetailS') (1)
WHEN  ('Orders') (1)
WHEN  ('OrdersS') (1)
WHEN  ('Products') (1)

%FileDeclarationName DEPEND %File DEFAULT TIMES 0

%FileDeclarationOver DEPEND %File DEFAULT TIMES 0

%OverrideOpenMode DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%OverrideUserAccess DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%OverrideOtherAccess DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%OverrideLazyOpen DEPEND %File DEFAULT TIMES 7
WHEN  ('') ('Use Default')
WHEN  ('Customers') ('Use Default')
WHEN  ('Detail') ('Use Default')
WHEN  ('DetailS') ('Use Default')
WHEN  ('Orders') ('Use Default')
WHEN  ('OrdersS') ('Use Default')
WHEN  ('Products') ('Use Default')

%OverrideDoNotAssertOnCloseMisuse DEPEND %File LONG TIMES 7
WHEN  ('') (0)
WHEN  ('Customers') (0)
WHEN  ('Detail') (0)
WHEN  ('DetailS') (0)
WHEN  ('Orders') (0)
WHEN  ('OrdersS') (0)
WHEN  ('Products') (0)

%StandardExternalModule DEPEND %Module LONG TIMES 12
WHEN  ('') (1)
WHEN  ('MiniAppFrame.CLW') (1)
WHEN  ('TestApp.clw') (1)
WHEN  ('TestApp001.clw') (1)
WHEN  ('TestApp002.clw') (1)
WHEN  ('TestApp003.clw') (1)
WHEN  ('TestApp004.clw') (1)
WHEN  ('TestApp005.clw') (1)
WHEN  ('TestApp006.clw') (1)
WHEN  ('TestApp007.clw') (1)
WHEN  ('TestApp008.clw') (1)
WHEN  ('Tests.clw') (1)

%NoGenerateGlobals LONG  (0)
%WindowManagerType DEFAULT  ('WindowManager')
%ResetOnGainFocus LONG  (0)
%AutoToolbar LONG  (1)
%AutoRefresh LONG  (1)
%ImageClass DEFAULT  ('ImageManager')
%ErrorStatusManagerType DEFAULT  ('ErrorStatusClass')
%ErrorManagerType DEFAULT  ('ErrorClass')
%DefaultErrorCategory DEFAULT  ('ABC')
%AllowSelectCopy LONG  (0)
%StoreErrorHistory LONG  (0)
%LimitStoredHistory LONG  (0)
%ErrorHistoryThreshold DEFAULT  ('300')
%HistoryViewTrigger DEFAULT  ('Level:Fatal')
%PopupClass DEFAULT  ('PopupClass')
%SelectFileClass DEFAULT  ('SelectFileClass')
%ResizerType DEFAULT  ('WindowResizeClass')
%ResizerDeFaultFindParents LONG  (1)
%ResizerDefaultOptimizeMoves LONG  (1)
%ResizerDefaultOptimizeRedraws LONG  (1)
%INIClass DEFAULT  ('INIClass')
%RunTimeTranslatorType DEFAULT  ('TranslatorClass')
%ExtractionFilename DEFAULT  ('')
%TranslationGroups MULTI LONG  ()
%TranslationFile DEPEND %TranslationGroups DEFAULT TIMES 0

%TranslationGroup DEPEND %TranslationGroups DEFAULT TIMES 0

%CalendarManagerType DEFAULT  ('CalendarClass')
%GlobalChangeColor LONG  (0)
%GlobalColorSunday LONG  (255)
%GlobalColorSaturday LONG  (255)
%GlobalColorHoliday LONG  (32768)
%GlobalColorOther LONG  (0)
%GlobalSelectOnClose DEFAULT  ('Select')
%GlobalUseABCClasess LONG  (1)
%FileManagerType DEFAULT  ('FileManager')
%ViewManagerType DEFAULT  ('ViewManager')
%RelationManagerType DEFAULT  ('RelationManager')
%BrowserType DEFAULT  ('BrowseClass')
%ActiveInvisible LONG  (0)
%AllowUnfilled LONG  (0)
%RetainRow LONG  (1)
%FileDropManagerType DEFAULT  ('FileDropClass')
%FileDropComboManagerType DEFAULT  ('FileDropComboClass')
%FormVCRManagerType DEFAULT  ('FormVCRClass')
%BrowseEIPManagerType DEFAULT  ('BrowseEIPManager')
%EditInPlaceInterface DEFAULT  ('Detailed')
%EditInPlaceType DEFAULT  ('EditEntryClass')
%EditInPlaceEntryType DEFAULT  ('EditEntryClass')
%EditInPlaceTextType DEFAULT  ('EditTextClass')
%EditInPlaceCheckType DEFAULT  ('EditCheckClass')
%EditInPlaceSpinType DEFAULT  ('EditSpinClass')
%EditInPlaceDropListType DEFAULT  ('EditDropListClass')
%EditInPlaceDropComboType DEFAULT  ('EditDropComboClass')
%EditInPlaceColorType DEFAULT  ('EditColorClass')
%EditInPlaceFileType DEFAULT  ('EditFileClass')
%EditInPlaceFontType DEFAULT  ('EditFontClass')
%EditInPlaceMultiSelectType DEFAULT  ('EditMultiSelectClass')
%EditInPlaceCalendarType DEFAULT  ('EditCalendarClass')
%EditInPlaceLookupType DEFAULT  ('EditLookupClass')
%EditInPlaceOtherType DEFAULT  ('EditEntryClass')
%QBEFormType DEFAULT  ('QueryFormClass')
%QBEFormVisualType DEFAULT  ('QueryFormVisual')
%QBEListType DEFAULT  ('QueryListClass')
%QBEListVisualType DEFAULT  ('QueryListVisual')
%StepManagerType DEFAULT  ('StepClass')
%StepManagerLongType DEFAULT  ('StepLongClass')
%StepManagerRealType DEFAULT  ('StepRealClass')
%StepManagerStringType DEFAULT  ('StepStringClass')
%StepManagerCustomType DEFAULT  ('StepCustomClass')
%StepLocatorType DEFAULT  ('StepLocatorClass')
%EntryLocatorType DEFAULT  ('EntryLocatorClass')
%IncrementalLocatorType DEFAULT  ('IncrementalLocatorClass')
%FilteredLocatorType DEFAULT  ('FilterLocatorClass')
%FuzzyMatcherClass DEFAULT  ('FuzzyClass')
%GridClass DEFAULT  ('GridClass')
%SidebarClass DEFAULT  ('SidebarClass')
%ProcessType DEFAULT  ('ProcessClass')
%PrintPreviewType DEFAULT  ('PrintPreviewClass')
%ReportManagerType DEFAULT  ('ReportManager')
%ReportTargetSelectorManagerType DEFAULT  ('ReportTargetSelectorClass')
%BreakManagerType DEFAULT  ('BreakManagerClass')
%AsciiViewerClass DEFAULT  ('AsciiViewerClass')
%AsciiSearchClass DEFAULT  ('AsciiSearchClass')
%AsciiPrintClass DEFAULT  ('AsciiPrintClass')
%AsciiFileManagerType DEFAULT  ('AsciiFileClass')
%ToolbarClass DEFAULT  ('ToolbarClass')
%ToolbarListBoxType DEFAULT  ('ToolbarListboxClass')
%ToolbarRelTreeType DEFAULT  ('ToolbarReltreeClass')
%ToolbarUpdateClassType DEFAULT  ('ToolbarUpdateClass')
%ToolbarFormVCRType DEFAULT  ('ToolbarFormVCRClass')
%OverrideAbcSettings LONG  (0)
%AbcSourceLocation DEFAULT  ('LINK')
%AbcLibraryName DEFAULT  ('')
%AppTemplateFamily DEFAULT  ('ABC')
%CWTemplateVersion DEFAULT  ('v11.0')
%ABCVersion DEFAULT  ('11000')
[ADDITION]
NAME StringTheory Activate_StringTheory
[INSTANCE]
INSTANCE 1
[PROMPTS]
%NoGloStringTheory LONG  (0)
%md5 LONG  (0)
%MultiDLL LONG  (0)
%RootDLL LONG  (0)
%dClasses8Bx MULTI LONG  (1, 2, 3, 4, 5)
%dClasses8B DEPEND %dClasses8Bx DEFAULT TIMES 5
WHEN  (1) ('STRINGTHEORY')
WHEN  (2) ('STRINGPICTURE')
WHEN  (3) ('UNIXDATE')
WHEN  (4) ('STRINGFORMAT')
WHEN  (5) ('STRINGDEFORMAT')

%dBaseClass DEPEND %dClasses8Bx DEFAULT TIMES 5
WHEN  (1) ('')
WHEN  (2) ('')
WHEN  (3) ('')
WHEN  (4) ('UnixDate')
WHEN  (5) ('UnixDate')

%dClassINCFile DEPEND %dClasses8Bx DEFAULT TIMES 5
WHEN  (1) ('STRINGTHEORY.INC')
WHEN  (2) ('STRINGTHEORY.INC')
WHEN  (3) ('STRINGTHEORY.INC')
WHEN  (4) ('STRINGTHEORY.INC')
WHEN  (5) ('STRINGTHEORY.INC')

%dMethods8Cx DEPEND %dClasses8Bx MULTI LONG TIMES 5
WHEN  (1) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, |
  21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, |
  41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, |
  61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, |
  81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, |
  101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, |
  117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, |
  133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, |
  149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, |
  165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, |
  181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, |
  197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, |
  213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, |
  229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, |
  245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, |
  261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, |
  277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, |
  293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, |
  309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, |
  325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, |
  341, 342)
WHEN  (2) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, |
  21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38)
WHEN  (3) (1, 2, 3, 4)
WHEN  (4) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
WHEN  (5) (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)

%dMethods8C DEPEND %dMethods8Cx DEFAULT TIMES 5
WHEN  (1)TIMES 342
WHEN  (1) ('Destruct {14}Procedure ()')
WHEN  (2) ('Construct {13}Procedure ()')
WHEN  (3) ('Start {17}Procedure (long pForce=true),Virtual')
WHEN  (4) ('Stream {16}Procedure (string pFilename, long pSize=10, bool pAppendFlag=false),long, proc, virtual')
WHEN  (5) ('NoStream {14}Procedure (),virtual')
WHEN  (6) ('FlushAndKeep {10}Procedure (),long, proc, virtual')
WHEN  (7) ('Flush {17}Procedure (),long, proc, virtual')
WHEN  (8) ('Flush {17}Procedure (string pStr),long, proc, virtual')
WHEN  (9) ('Flush {17}Procedure (*string pStr),long, proc, virtual')
WHEN  (10) ('Flush {17}Procedure (StringTheory pStr),long, proc, virtual')
WHEN  (11) ('AppendA {15}Procedure (string newValue, long pClip = false, <<string pSep>), virtual   ')
WHEN  (12) ('AppendBinary {10}Procedure (long pValue,Long pLength=4),Virtual')
WHEN  (13) ('Append {16}Procedure (string newValue), virtual')
WHEN  (14) ('Append {16}Procedure (*string newValue), virtual')
WHEN  (15) ('Append {16}Procedure (string newValue, long pOptions ), virtual ')
WHEN  (16) ('Append {16}Procedure (*string newValue, long pOptions ), virtual  ')
WHEN  (17) ('Append {16}Procedure (string newValue, long pOptions = st:NoClip , string pSep), virtual ')
WHEN  (18) ('Append {16}Procedure (*string newValue, long pOptions = st:NoClip , string pSep), virtual ')
WHEN  (19) ('Append {16}Procedure (StringTheory pStr, long pOptions = st:NoClip, string pSep), virtual')
WHEN  (20) ('Append {16}Procedure (StringTheory pStr, string pSep), virtual')
WHEN  (21) ('Append {16}Procedure (StringTheory pStr), virtual')
WHEN  (22) ('Cat {19}Procedure (stringTheory pStr),virtual')
WHEN  (23) ('Cat {19}Procedure (stringTheory pStr, long pLen ),virtual')
WHEN  (24) ('Cat {19}Procedure (string newValue ),virtual')
WHEN  (25) ('Cat {19}Procedure (string newValue, long pLen ),virtual')
WHEN  (26) ('Cat {19}Procedure (*string newValue),virtual')
WHEN  (27) ('Cat {19}Procedure (*string newValue, long pLen),virtual')
WHEN  (28) ('CatAddr {15}Procedure (long pAddr, long pLen),virtual')
WHEN  (29) ('SetValue {14}Procedure (StringTheory newValue), virtual')
WHEN  (30) ('SetValue {14}Procedure (string newValue,long pClip=false), virtual')
WHEN  (31) ('SetValue {14}Procedure (*string newValue,long pClip=false), virtual')
WHEN  (32) ('SetValueByAddress     Procedure (long newValueAddress,long pLength), virtual')
WHEN  (33) ('_EqualsUnicode        Procedure (*String otherValue, Long pOptions = st:UnicodeCompare),long, virtual')
WHEN  (34) ('_EqualsUnicode        Procedure (StringTheory otherValue, Long pOptions = st:UnicodeCompare),long, virtual')
WHEN  (35) ('Equals {16}Procedure (StringTheory otherValue, Long pOptions = ST:SimpleCompare),long, virtual')
WHEN  (36) ('Equals {16}Procedure (String otherValue, Long pOptions = ST:SimpleCompare + ST:Clip),long, virtual')
WHEN  (37) ('_GetNextBufferSize    Procedure (Long pLen),Long,Virtual')
WHEN  (38) ('_SetValuePointer      Procedure (Long pPtr,Long pSize, Long pEnd, Long pDispose=1),Virtual')
WHEN  (39) ('_StealValue {11}Procedure (stringTheory otherValue), virtual')
WHEN  (40) ('Assign {16}Procedure (*string newValue), virtual')
WHEN  (41) ('Assign {16}Procedure (string newValue), virtual')
WHEN  (42) ('Abbreviate {12}Procedure (Long pPos,Long pRangeLeft = 15,Long pRangeRight = 15),Long,Proc,Virtual')
WHEN  (43) ('GetValuePtr {11}Procedure (),*String,virtual')
WHEN  (44) ('GetAddress {12}Procedure (),Long,Virtual')
WHEN  (45) ('Base64Encode {10}Procedure (Long pOptions=0),Virtual')
WHEN  (46) ('Base64Encode {10}Procedure (*string pText, *long pLen), virtual')
WHEN  (47) ('Base64Decode {10}Procedure (), virtual')
WHEN  (48) ('Base64Decode {10}Procedure (*string pText, *long pLen), virtual')
WHEN  (49) ('QuotedPrintableEncode Procedure (), virtual')
WHEN  (50) ('QuotedPrintableDecode Procedure (), virtual')
WHEN  (51) ('EncodedWordDecode     Procedure (), virtual')
WHEN  (52) ('EncodedWordEncode     Procedure (<<String pCharset>,long pEncoding=2),virtual')
WHEN  (53) ('JsonEncode {12}Procedure (Long pOptions=0), virtual')
WHEN  (54) ('JsonDecode {12}Procedure (), virtual')
WHEN  (55) ('XMLEncode {13}Procedure (Long pOptions=0), virtual')
WHEN  (56) ('XMLDecode {13}Procedure (), virtual')
WHEN  (57) ('ZeroXEncode {11}Procedure (),Virtual')
WHEN  (58) ('ZeroXDecode {11}Procedure (),Virtual')
WHEN  (59) ('Free {18}Procedure (Long pLines=False, Long pForce=false), virtual')
WHEN  (60) ('FreeLines {13}Procedure (), virtual')
WHEN  (61) ('ClipLen {15}Procedure (), long, virtual')
WHEN  (62) ('ClipLength {12}Procedure (), long, virtual')
WHEN  (63) ('Crop {18}Procedure (ulong pStart=1, ulong pEnd=0), Virtual')
WHEN  (64) ('Instring {14}Procedure (string pSearchValue), long, virtual')
WHEN  (65) ('Instring {14}Procedure (*string pSearchValue), long, virtual')
WHEN  (66) ('Instring {14}Procedure (string pSearchValue, long pStep), long, virtual')
WHEN  (67) ('Instring {14}Procedure (*string pSearchValue, long pStep), long, virtual')
WHEN  (68) ('Instring {14}Procedure (string pSearchValue, long pStep=1, long pStart), long, virtual')
WHEN  (69) ('Instring {14}Procedure (*string pSearchValue, long pStep=1, long pStart), long, virtual')
WHEN  (70) ('Instring {14}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd), long, virtual')
WHEN  (71) ('Instring {14}Procedure (*string pSearchValue, long pStep=1, long pStart=1, long pEnd), long, virtual')
WHEN  (72) ('Instring {14}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd=0, long pNocase), long, virtual')
WHEN  (73) ('Instring {14}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd=0, long pNocase=0, long pWholeWord), long, virtual')
WHEN  (74) ('Match {17}Procedure (string pRegEx, Long pStart, Long pEnd, long pMode=Match:Regular, long pNoCase=0), long, virtual')
WHEN  (75) ('FindMatch {13}Procedure (string pRegEx,*long pStart, *long pEnd, long pMode=Match:Regular, long pNoCase=0), String, virtual')
WHEN  (76) ('FindMatchPosition     Procedure (string pRegEx,*long pStart, *long pEnd, long pMode=Match:Regular, long pNoCase=0), virtual')
WHEN  (77) ('Count {17}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd=0, long pNoCase=0, bool softClip=true, long pOverlap=true), long, virtual')
WHEN  (78) ('Capitalize {12}Procedure (long pCount=1, long pStartPos=1, long pEndPos=0,<<String pCharlist>), virtual')
WHEN  (79) ('ErrorTrap {13}Procedure (string methodName, string errorMessage, byte forceLog=false), virtual')
WHEN  (80) ('ExtensionOnly {9}Procedure (<<string fPath>),String, virtual')
WHEN  (81) ('FormatMessage {9}Procedure (long err), string, virtual')
WHEN  (82) ('GetValue {14}Procedure (), string, virtual')
WHEN  (83) ('GetValue {14}Procedure (long maxLen), string, virtual')
WHEN  (84) ('GetVal {16}Procedure (), string, virtual')
WHEN  (85) ('GetLine {15}Procedure (long pLineNumber), string, virtual')
WHEN  (86) ('GetBufferLength       Procedure (),long,Virtual')
WHEN  (87) ('InLine {16}Procedure (string pSearchValue, long pStep=1, long pStart=1, long pEnd=0, long pNocase=0, long pWholeLine=0, long p_Where=0, long pClip=true),Long,virtual')
WHEN  (88) ('SetLine {15}Procedure (long pLineNumber,String pValue),virtual')
WHEN  (89) ('SetLine {15}Procedure (long pLineNumber,*String pValue),virtual')
WHEN  (90) ('AddLine {15}Procedure (long pLineNumber,String pValue),virtual')
WHEN  (91) ('AddLine {15}Procedure (long pLineNumber,*String pValue),virtual')
WHEN  (92) ('AddLine {15}Procedure (String pValue),virtual')
WHEN  (93) ('AddLine {15}Procedure (*String pValue),virtual')
WHEN  (94) ('DeleteLine {12}Procedure (long pLineNumber), long, proc, virtual')
WHEN  (95) ('RemoveLines {11}Procedure (<<String pAlphabet>), long, proc, virtual')
WHEN  (96) ('SerializeQueue        Procedure (*Queue pQueue,<<String pRecordBoundary>,<<string pFieldBoundary>,<<string pQuotestart>,<<string pQuoteEnd>,Long pLevel=1,Long pFree=true),virtual')
WHEN  (97) ('SerializeGroup        Procedure (*Group pGroup,<<string pBoundary>,<<string pQuotestart>,<<string pQuoteEnd>,Long pLevel=1,Long pFree=true),long,proc,virtual')
WHEN  (98) ('SerializeQueue        Procedure (*Queue pQueue,<<string pRecordBoundary>,*StringTheory pFieldBoundary,<<string pQuotestart>,<<string pQuoteEnd>,Long pLevel=1,Long pFree=true),virtual')
WHEN  (99) ('SerializeGroup        Procedure (*Group pGroup,*StringTheory pBoundary,<<string pQuotestart>,<<string pQuoteEnd>,Long pLevel=1,Long pFree=true),long,proc,virtual')
WHEN  (100) ('Join {18}Procedure (string pBoundary,<<string pQuotestart>,<<string pQuoteEnd>,long pAlwaysQuote=false),virtual')
WHEN  (101) ('Length {16}Procedure (), long, virtual')
WHEN  (102) ('LengthA {15}Procedure (), long, virtual  ')
WHEN  (103) ('Len {19}Procedure (), long, virtual')
WHEN  (104) ('Chars {17}Procedure (Long pEncoding=-1, <<String pStr>),Long,Virtual ')
WHEN  (105) ('_Malloc {15}Procedure (Long strLen, Long pForce=false, Long pSilent=true), virtual')
WHEN  (106) ('MD5 {19}Procedure (Long pFormat=st:EncHex ,<<*String pStr>,Long pLength=0), string, virtual')
WHEN  (107) ('Prepend {15}Procedure (string newValue, long pClip), virtual')
WHEN  (108) ('Prepend {15}Procedure (string newValue, long pClip = false, string pSep), virtual')
WHEN  (109) ('Prepend {15}Procedure (string newValue), virtual')
WHEN  (110) ('Prepend {15}Procedure (*string newValue), virtual')
WHEN  (111) ('Prepend {15}Procedure (stringtheory newValue, String pSep), virtual')
WHEN  (112) ('Prepend {15}Procedure (stringtheory newValue), virtual')
WHEN  (113) ('SeedRandom {12}Procedure (), virtual')
WHEN  (114) ('Random {16}Procedure (long pLength=16, long pFlags=0, <<String pAlphabet>),String, Proc, virtual')
WHEN  (115) ('MakeGuid {14}Procedure (long pLength=16, long pFlags=st:Upper+st:Number),String, Proc, virtual')
WHEN  (116) ('Records {15}Procedure (), long, virtual')
WHEN  (117) ('Replace {15}Procedure (string pOldValue, string pNewValue, long pCount=0, long pStart=1, long pEnd=0, long pNoCase=0, bool pRecursive), Long, Proc, virtual')
WHEN  (118) ('Replace {15}Procedure (string pOldValue, string pNewValue, long pCount=0, long pStart=1, long pEnd=0, long pNoCase=0), Long, Proc, virtual')
WHEN  (119) ('ReplaceBetween        Procedure (string pLeft, <<string pRight>, string pOldValue, string pNewValue, long pCount=0, long pStart=1, long pEnd=0, long pNoCase=0, long pReplaceAll=false), Long, Proc, virtual')
WHEN  (120) ('ReplaceExceptBetween  Procedure (string pLeft, <<string pRight>, string pOldValue, string pNewValue, long pCount=0, long pStart=1, long pEnd=0, long pNoCase=0), Long, Proc, virtual')
WHEN  (121) ('ReplaceSingleChars    Procedure (string pOldChars, string pNewChars),long,proc, virtual')
WHEN  (122) ('ReplaceSingleChars    Procedure (string pOldChars, string pNewChars, bool pOnceOnly),long,proc, virtual')
WHEN  (123) ('RemoveHTML {12}Procedure (),Virtual')
WHEN  (124) ('SetLength {13}Procedure (Long strLen, Long pForce=false), virtual')
WHEN  (125) ('Slice {17}Procedure (Long pStart=1, Long pEnd=0),String, virtual')
WHEN  (126) ('Split {17}Procedure (string pSplitStr,<<string pQuotestart>,<<string pQuoteEnd>, bool removeQuotes = false, bool pClip = false, bool pLeft=false, <<string pSeparator>,Long pNested=false), virtual')
WHEN  (127) ('SplitEvery {12}Procedure (long numChars), virtual')
WHEN  (128) ('SplitIntoWords        Procedure (long startPos = 1, long textType=ST:TEXT, <<String pCharlist>,Long pSmartWords=true)')
WHEN  (129) ('SplitByMatch {10}Procedure (string pRegEx, long pNoCase=0), virtual')
WHEN  (130) ('SplitBetween {10}Procedure (string pLeft, string pRight, long pNoCase=false, long pExclusive=true), virtual')
WHEN  (131) ('Sort {18}Procedure (Long pSortType,string pSplitStr,<<string pQuotestart>,<<string pQuoteEnd>, bool pClip = false, bool pLeft=false),Virtual')
WHEN  (132) ('Sort {18}Procedure (Long pSortType),Virtual')
WHEN  (133) ('Filter {16}Procedure (string pInclude, string pExclude, long pNoCase=TRUE, long pClip=TRUE),virtual')
WHEN  (134) ('Sub {19}Procedure (long pStart=1, long pLength=1), string, virtual')
WHEN  (135) ('GetCodePageFromCharset Procedure(<<Long pCharSet>),Long, virtual')
WHEN  (136) ('ToCstring {13}Procedure (), *cstring, virtual')
WHEN  (137) ('Trace {17}Procedure (Queue pQueue), virtual')
WHEN  (138) ('Trace {17}Procedure (<<string errMsg>), virtual')
WHEN  (139) ('Upper {17}Procedure (<<String pQuote>, <<String pQuoteEnd>), virtual')
WHEN  (140) ('Lower {17}Procedure (<<String pQuote>, <<String pQuoteEnd>), virtual')
WHEN  (141) ('FileNameOnly {10}Procedure (<<string fPath>,Long pIncludeExtension=true), string, virtual')
WHEN  (142) ('PathOnly {14}Procedure (<<string fPath>), string, proc, virtual')
WHEN  (143) ('UrlProtocolOnly       Procedure (<<string pURL>), string, proc, virtual')
WHEN  (144) ('UrlHostOnly {11}Procedure (<<string pURL>,Long pIncludePort=true), string, proc, virtual')
WHEN  (145) ('UrlPortOnly {11}Procedure (<<string pURL>), long, proc, virtual')
WHEN  (146) ('UrlPathOnly {11}Procedure (<<string pURL>, Long pIncludeFile=true), string, proc, virtual')
WHEN  (147) ('UrlFileOnly {11}Procedure (<<string pURL>), string, proc, virtual')
WHEN  (148) ('UrlParametersOnly     Procedure (<<string pURL>), string, proc, virtual')
WHEN  (149) ('UrlParameter {10}Procedure (String pParameter,<<string pURL>), string, proc, virtual')
WHEN  (150) ('LoadFile {14}Procedure (string fileName,Long pOffset=0, Long pLength=0, Long pRemoveBOM=false), long, proc, virtual')
WHEN  (151) ('SaveFile {14}Procedure (string fileName, bool pAppendFlag=false), long, proc, virtual')
WHEN  (152) ('SaveFile {14}Procedure (*string WriteString, string fileName, bool pAppendFlag, long dataLen=0), long, proc, virtual')
WHEN  (153) ('SaveFileA {13}Procedure (string WriteString, string fileName, bool pAppendFlag=false), long, proc, virtual')
WHEN  (154) ('SetEncodingFromBOM    Procedure (Long pRemoveBOM=true),Long,Proc,Virtual')
WHEN  (155) ('AddBOM {16}Procedure (Long pEncoding=-1),Virtual')
WHEN  (156) ('Before {16}Procedure (string pSearchValue, long pStart=1, long pEnd=0, long pNoCase=0), string, virtual')
WHEN  (157) ('SetBefore {13}Procedure (string pSearchValue, long pStart=1, long pEnd=0, long pNoCase=0, long pClearIfNotFound=false),long,proc, virtual')
WHEN  (158) ('Between {15}Procedure (string pLeft, string pRight,long pStart=1, long pEnd=0, long pNoCase=0, long pExclusive=true), string, virtual')
WHEN  (159) ('FindBetween {11}Procedure (string pLeft, string pRight, *long pStart, *long pEnd, bool pNoCase=false, long pExclusive=true), string, virtual')
WHEN  (160) ('SetBetween {12}Procedure (string pLeft, string pRight, long pStart=1, long pEnd=0, long pNoCase=0, long pExclusive=true, long pClearIfNotFound=false),long, proc, virtual')
WHEN  (161) ('FindBetweenPosition   Procedure (string pLeft, string pRight, *long pStart, *long pEnd, bool pNoCase=false, long pExclusive=true), virtual')
WHEN  (162) ('After {17}Procedure (string pSearchValue, long pStart=1, long pEnd=0, long pNoCase=0), string, virtual')
WHEN  (163) ('SetAfter {14}Procedure (string pSearchValue, long pStart=1, long pEnd=0, long pNoCase=0, long pClearIfNotFound=false),long,proc virtual')
WHEN  (164) ('ToBlob {16}Procedure (*blob blobField), long, proc, virtual')
WHEN  (165) ('FromBlob {14}Procedure (*blob blobField), long, proc, virtual')
WHEN  (166) ('ChangeBase {12}Procedure (Long pBaseFrom,Long pBaseTo),long,proc,virtual')
WHEN  (167) ('LongDivision {10}Procedure(Long pDivisor, *Long rRemainder, Long pBase),long,proc,virtual')
WHEN  (168) ('AnsiToUtf16 {11}Procedure (*string strAnsi, *long unicodeChars, ulong CodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (169) ('Utf16ToAnsi {11}Procedure (*string unicodeString, *long ansiLen, long unicodeChars=-1, ulong CodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (170) ('Utf8To16 {14}Procedure (*string strUtf8, *long unicodeChars), *string, virtual')
WHEN  (171) ('Utf16To8 {14}Procedure (*string unicodeString, *long utf8Len, long unicodeChars=-1), *string, virtual')
WHEN  (172) ('Utf8ToAnsi {12}Procedure (*string strUtf8, *long ansiLen, long pCodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (173) ('AnsiToUtf8 {12}Procedure (*string strAnsi, *long utf8Len, long pCodePage=st:CP_US_ASCII), *string, virtual')
WHEN  (174) ('apiUtf8ToAnsi {9}Procedure (*string strUtf8, *long ansiLen), *string, virtual')
WHEN  (175) ('apiAnsiToUtf8 {9}Procedure (*string strAnsi, *long utf8Len), *string, virtual')
WHEN  (176) ('ToAnsi {16}Procedure (long encoding=0, long pCodePage=st:CP_US_ASCII), long, proc, virtual')
WHEN  (177) ('ToAnsi {16}Procedure (long encoding=0, long pCodePage=st:CP_US_ASCII,Long pBlockSize), long, proc, virtual')
WHEN  (178) ('ToUnicode {13}Procedure (long encoding=st:EncodeUtf8, long pCodePage=st:CP_US_ASCII), long, proc, virtual')
WHEN  (179) ('DecodeHexInline       Procedure (long pCodePage=st:CP_US_ASCII),Virtual')
WHEN  (180) ('DecodeHexInline       Procedure (string pId, Long pLength, long pCodePage=st:CP_US_ASCII),Virtual')
WHEN  (181) ('Utf16ToUtf8Char       Procedure (String p_utf16Char,*Long rLen),String,Virtual')
WHEN  (182) ('Normalize {13}Procedure (Long pForm=st:NFKD,Long pPreserveEncoding=true),Long,Proc,Virtual')
WHEN  (183) ('DecToBase {13}Procedure (long num, long base=16, long lowerCase=1), string, virtual')
WHEN  (184) ('BaseToDec {13}Procedure (string num, long base=16), long, virtual')
WHEN  (185) ('ByteToHex {13}Procedure (byte pByte), string, virtual')
WHEN  (186) ('HexToByte {13}Procedure (string hexVal), byte, virtual')
WHEN  (187) ('LongToHex {13}Procedure (long pLong), string, virtual')
WHEN  (188) ('StringToHex {11}Procedure (*string binData,Long pLen=0,Long pCase=0), *string, virtual')
WHEN  (189) ('StringToHex {11}Procedure (string binData,Long pLen=0,Long pCase=0), *string, virtual')
WHEN  (190) ('HexToString {11}Procedure (string hexData), *string, virtual')
WHEN  (191) ('ToHex {17}Procedure (Long pCase=0,Long pSpacer=0), virtual     ')
WHEN  (192) ('FromHex {15}Procedure (), virtual')
WHEN  (193) ('WrapText {14}Procedure(long wrapAt=80, bool keepExistingBreaks=true, bool pleft=false), virtual')
WHEN  (194) ('StrCpy {16}Procedure(*string pIn, *string pOut, bool pClip = true), long, proc, virtual')
WHEN  (195) ('ToBytes {15}Procedure (*byte pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (196) ('ToBytes {15}Procedure (*short pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (197) ('ToBytes {15}Procedure (*ushort pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (198) ('ToBytes {15}Procedure (*long pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (199) ('ToBytes {15}Procedure (*ulong pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (200) ('ToBytes {15}Procedure (*sreal pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (201) ('ToBytes {15}Procedure (*real pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (202) ('ToBytes {15}Procedure (*decimal pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (203) ('ToBytes {15}Procedure (*cstring pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (204) ('ToBytes {15}Procedure (*pstring pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (205) ('ToBytes {15}Procedure (*string pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (206) ('FromBytes {13}Procedure (*string pSrc, *byte pDest, long pOffset=1), virtual')
WHEN  (207) ('FromBytes {13}Procedure (*string pSrc, *short pDest, long pOffset=1), virtual')
WHEN  (208) ('FromBytes {13}Procedure (*string pSrc, *ushort pDest, long pOffset=1), virtual')
WHEN  (209) ('FromBytes {13}Procedure (*string pSrc, *long pDest, long pOffset=1), virtual')
WHEN  (210) ('FromBytes {13}Procedure (*string pSrc, *ulong pDest, long pOffset=1), virtual')
WHEN  (211) ('FromBytes {13}Procedure (*string pSrc, *sreal pDest, long pOffset=1), virtual')
WHEN  (212) ('FromBytes {13}Procedure (*string pSrc, *real pDest, long pOffset=1), virtual')
WHEN  (213) ('FromBytes {13}Procedure (*string pSrc, *decimal pDest, long pOffset=1), virtual')
WHEN  (214) ('FromBytes {13}Procedure (*string pSrc, *cstring pDest, long pOffset=1), virtual')
WHEN  (215) ('FromBytes {13}Procedure (*string pSrc, *string pDest, long pOffset=1), virtual')
WHEN  (216) ('FromBytes {13}Procedure (*string pSrc, *pstring pDest, long pOffset=1), virtual')
WHEN  (217) ('SetBytes {14}Procedure (*byte pSrc), virtual')
WHEN  (218) ('SetBytes {14}Procedure (*short pSrc), virtual')
WHEN  (219) ('SetBytes {14}Procedure (*ushort pSrc), virtual')
WHEN  (220) ('SetBytes {14}Procedure (*long pSrc), virtual')
WHEN  (221) ('SetBytes {14}Procedure (*ulong pSrc), virtual')
WHEN  (222) ('SetBytes {14}Procedure (*sreal pSrc), virtual')
WHEN  (223) ('SetBytes {14}Procedure (*real pSrc), virtual')
WHEN  (224) ('SetBytes {14}Procedure (*decimal pSrc), virtual')
WHEN  (225) ('SetBytes {14}Procedure (*cstring pSrc), virtual')
WHEN  (226) ('SetBytes {14}Procedure (*string pSrc), virtual')
WHEN  (227) ('SetBytes {14}Procedure (*pstring pSrc), virtual')
WHEN  (228) ('GetBytes {14}Procedure (*byte pVal, long pOffset=1), virtual')
WHEN  (229) ('GetBytes {14}Procedure (*short pVal, long pOffset=1), virtual')
WHEN  (230) ('GetBytes {14}Procedure (*ushort pVal, long pOffset=1), virtual')
WHEN  (231) ('GetBytes {14}Procedure (*long pVal, long pOffset=1), virtual')
WHEN  (232) ('GetBytes {14}Procedure (*ulong pVal, long pOffset=1), virtual')
WHEN  (233) ('GetBytes {14}Procedure (*sreal pVal, long pOffset=1), virtual')
WHEN  (234) ('GetBytes {14}Procedure (*real pVal, long pOffset=1), virtual')
WHEN  (235) ('GetBytes {14}Procedure (*decimal pVal, long pOffset=1), virtual')
WHEN  (236) ('GetBytes {14}Procedure (*cstring pVal, long pOffset=1), virtual')
WHEN  (237) ('GetBytes {14}Procedure (*string pVal, long pOffset=1), virtual')
WHEN  (238) ('GetBytes {14}Procedure (*pstring pVal, long pOffset=1), virtual')
WHEN  (239) ('SetBytes {14}Procedure (*? pVal, string pType, long pOffset=1), bool, proc, virtual')
WHEN  (240) ('GetBytes {14}Procedure (*? pVal, string pType, long pOffset=1), bool, proc, virtual')
WHEN  (241) ('FindWord {14}Procedure(long pWordNumber,long startPos = -1, long textType=ST:TEXT,*Long pStart, *Long pEnd,<<String pCharlist>,Long pSmartWords=true), string, virtual')
WHEN  (242) ('GetWord {15}Procedure (long pWordNumber,long startPos = -1, long textType=ST:TEXT, <<String pCharlist>,Long pSmartWords=true), string, virtual')
WHEN  (243) ('WordStart {13}Procedure (long pStartPos=1, long textType=ST:TEXT,Long pDir=st:Forwards,<<String pCharlist>), long, virtual')
WHEN  (244) ('WordEnd {15}Procedure (long pStartPos=1, long textType=ST:TEXT,<<String pCharlist>,Long pSmartWords=true), long, virtual')
WHEN  (245) ('CountWords {12}Procedure (long startPos = 1, long textType=ST:TEXT,<<String pCharlist>,Long pSmartWords=true), long, virtual')
WHEN  (246) ('RemoveAttributes      Procedure (String pTag,Long pCount=0), virtual')
WHEN  (247) ('RemoveXMLPrefixes     Procedure(), virtual')
WHEN  (248) ('HtmlEntityToDec       Procedure(),virtual')
WHEN  (249) ('DecEntityToChar       Procedure(),Long,Proc,Virtual')
WHEN  (250) ('Remove {16}Procedure(string pLeft,<<string pRight>,long pNoCase=0,long pContentsOnly=0, long pCount=0), Long,Proc,virtual')
WHEN  (251) ('RemoveFromPosition    Procedure(long pPosition, long pLength), Long,Proc,virtual')
WHEN  (252) ('Clip {18}Procedure (), virtual')
WHEN  (253) ('Trim {18}Procedure (<<String pAlphabet>), virtual')
WHEN  (254) ('Reverse {15}Procedure (String pString),String,Proc Virtual')
WHEN  (255) ('Reverse {15}Procedure (),Virtual')
WHEN  (256) ('Left {18}Procedure(Long pLength=0,Long pwhat=st:spaces,<<String pPad>),String, virtual')
WHEN  (257) ('SetLeft {15}Procedure(Long pLength=0,Long pwhat=st:spaces,<<String pPad>), virtual')
WHEN  (258) ('Right {17}Procedure(Long pLength=0,Long pwhat=st:spaces,<<String pPad>),String, virtual')
WHEN  (259) ('SetRight {14}Procedure(Long pLength=0,Long pwhat=st:spaces,<<String pPad>), virtual')
WHEN  (260) ('All {19}Procedure(Long pLength=255),String, virtual')
WHEN  (261) ('SetAll {16}Procedure(Long pLength=255), virtual')
WHEN  (262) ('Squeeze {15}Procedure (long textType=ST:TEXT,<<String pCharlist>,Long pSmartWords=true), virtual')
WHEN  (263) ('ContainsADigit        Procedure (), bool, virtual')
WHEN  (264) ('IsAllDigits {11}Procedure (), bool, virtual')
WHEN  (265) ('ContainsA {13}Procedure (String pAlphabet, <<String pTestString>,Long pClip=true), bool, virtual')
WHEN  (266) ('ContainsChar {10}Procedure (String pChar), bool, virtual')
WHEN  (267) ('ContainsChar {10}Procedure (String pChar, *string pTestString), bool, virtual')
WHEN  (268) ('ContainsChar {10}Procedure (String pChar, string pTestString), bool, virtual')
WHEN  (269) ('IsAscii {15}Procedure (), bool, virtual')
WHEN  (270) ('IsAll {17}Procedure (String pAlphabet, <<String pTestString>,Long pClip=true), bool, virtual')
WHEN  (271) ('RemoveChars {11}Procedure (String pAlphabet), long, proc, virtual')
WHEN  (272) ('KeepChars {13}Procedure (String pAlphabet, String pReplacementChar), long, proc, virtual')
WHEN  (273) ('KeepChars {13}Procedure (String pAlphabet), long, proc, virtual')
WHEN  (274) ('MatchBrackets {9}Procedure (String pLeftBracket, String pRightBracket, Long pStart=1),Long,virtual')
WHEN  (275) ('_SwitchEndian {9}Procedure (), virtual')
WHEN  (276) ('BigEndian {13}Procedure (), virtual')
WHEN  (277) ('LittleEndian {10}Procedure (), virtual')
WHEN  (278) ('SwitchEndian {10}Procedure (ulong x), long, virtual')
WHEN  (279) ('BigEndian {13}Procedure (ulong x), long, virtual')
WHEN  (280) ('LittleEndian {10}Procedure (ulong x), long, virtual')
WHEN  (281) ('ReverseByteOrder      Procedure (), virtual')
WHEN  (282) ('Str {19}Procedure (), string, virtual')
WHEN  (283) ('Str {19}Procedure (string newValue),  string, proc, virtual')
WHEN  (284) ('Str {19}Procedure (*string newValue), string, proc, virtual')
WHEN  (285) ('SetSlice {14}Procedure (long pStart=1, long pEnd=0, string newValue), virtual')
WHEN  (286) ('Insert {16}Procedure (long pStart, stringTheory insertValue), virtual')
WHEN  (287) ('Insert {16}Procedure (long pStart, string insertValue), virtual')
WHEN  (288) ('Insert {16}Procedure (long pStart, *string insertValue), virtual')
WHEN  (289) ('Quote {17}Procedure (<<string pQuotestart>,<<string pQuoteEnd>), virtual')
WHEN  (290) ('UnQuote {15}Procedure (<<string pQuotestart>,<<string pQuoteEnd>), virtual')
WHEN  (291) ('FindChar {14}Procedure (string pSearchValue), long, virtual')
WHEN  (292) ('FindChar {14}Procedure (string pSearchValue, long pStart), long, virtual')
WHEN  (293) ('FindChar {14}Procedure (string pSearchValue, long pStart=1, long pEnd), long, virtual')
WHEN  (294) ('FindChar {14}Procedure (string pSearchValue, long pStart=1, long pEnd=0, String p_Text), long, virtual')
WHEN  (295) ('_memChrs {14}Procedure (*string pSearchValue, long pAddr, long pMaxStartAddr), long, virtual')
WHEN  (296) ('_memiChrs {13}Procedure (*string pSearchValue, long pAddr, long pMaxStartAddr), long, virtual')
WHEN  (297) ('_memiChr {14}Procedure (long buf, long c, unsigned count), long, virtual')
WHEN  (298) ('FindEndOfString       Procedure (Long pEncoding, Long pStringAddress, Long pMaxLength=255),long ,virtual')
WHEN  (299) ('FindCharsAddr {9}Procedure (*string pSearchValue, long pAddr, long pLen), long, virtual')
WHEN  (300) ('FindChars {13}Procedure (*string pSearchValue),long, virtual')
WHEN  (301) ('FindChars {13}Procedure (string pSearchValue), long, virtual')
WHEN  (302) ('FindChars {13}Procedure (*string pSearchValue, long pStart), long, virtual')
WHEN  (303) ('FindChars {13}Procedure (string pSearchValue,  long pStart), long, virtual')
WHEN  (304) ('FindChars {13}Procedure (*string pSearchValue, long pStart=1, long pEnd), long, virtual')
WHEN  (305) ('FindChars {13}Procedure (string pSearchValue,  long pStart=1, long pEnd), long, virtual')
WHEN  (306) ('FindChars {13}Procedure (*string pSearchValue, long pStart=1, long pEnd=0, *String p_Text), long, virtual')
WHEN  (307) ('FindChars {13}Procedure (string pSearchValue,  long pStart=1, long pEnd=0, *String p_Text), long, virtual')
WHEN  (308) ('FindChars {13}Procedure (string pSearchValue,  long pStart=1, long pEnd=0, String p_Text), long, virtual')
WHEN  (309) ('ColorToHex {12}Procedure (string pColor, bool pAddHash=false), string, virtual')
WHEN  (310) ('ColorFromHex {11}Procedure (String pColor),Long, virtual')
WHEN  (311) ('ColorToLong {11}Procedure (String pColor),Long, virtual')
WHEN  (312) ('_ColorToHex {11}Procedure (long pAddHash=false), virtual')
WHEN  (313) ('_ColorFromHex {9}Procedure (string pColor),Long, virtual')
WHEN  (314) ('_ColorFromCSL {9}Procedure (string pColor),Long, virtual')
WHEN  (315) ('UrlEncode {13}Procedure (String p_Text, long flags, String pDelimiter,String pSpace,String pAlphabet), string, virtual')
WHEN  (316) ('UrlEncode {13}Procedure (long flags =0,<<String pDelimiter>,<<String pSpace>,<<String pAlphabet>), virtual')
WHEN  (317) ('UrlDecode {13}Procedure (<<String pDelimiter>,<<String pSpace>), virtual')
WHEN  (318) ('CleanFileName {9}Procedure (<<string pFileName>, <<string pReplaceChar>), string, proc, virtual')
WHEN  (319) ('PeekRam {15}Procedure(Long pFormat=st:Decimal),Virtual')
WHEN  (320) ('PeekRam {15}Procedure(uLong pAdr,Long pLen, Long pFormat=st:Decimal),Virtual')
WHEN  (321) ('PeekRam {15}Procedure(stringTheory pResult,uLong pAdr,Long pLen, Long pFormat=st:Decimal),Virtual')
WHEN  (322) ('loadlibs {14}Procedure(),Long,Proc,Virtual')
WHEN  (323) ('LoadNormalize {9}Procedure(),Long,Proc,Virtual')
WHEN  (324) ('gzip {18}Procedure(Long pLevel=5),Long,Virtual,Proc')
WHEN  (325) ('gunzip {16}Procedure(),Long,Virtual,Proc')
WHEN  (326) ('MergeXml {14}Procedure(String pNew, Long pWhere),Virtual')
WHEN  (327) ('LineEndings {11}Procedure(Long pEndings=st:windows,Long pFrom=0), Virtual')
WHEN  (328) ('FormatTime {12}PROCEDURE (String pValue, String pFormat),String,Virtual')
WHEN  (329) ('FormatTime {12}PROCEDURE (String pFormat),Virtual')
WHEN  (330) ('DeformatTime {10}PROCEDURE (String pValue),String, Virtual')
WHEN  (331) ('DeformatTime {10}PROCEDURE (),Virtual')
WHEN  (332) ('IsTime {16}PROCEDURE (String pValue),Long, Virtual')
WHEN  (333) ('IsTime {16}PROCEDURE (),Long, Virtual')
WHEN  (334) ('StartsWith {12}Procedure (String pStr,Long pCase=True,Long pClip=True),Long,Virtual')
WHEN  (335) ('EndsWith {14}Procedure (String pStr,Long pCase=True,Long pClip=True),Long,Virtual')
WHEN  (336) ('ConvertOemToAnsi      Procedure(),Virtual')
WHEN  (337) ('ConvertAnsiToOem      Procedure(),Virtual')
WHEN  (338) ('AsnDecode {13}Procedure (*Long pPos,*StringTheory rASNValue,<<*String rASNType>),Long,Virtual')
WHEN  (339) ('AsnEncode {13}Procedure (String pType,<<String pValue>),Virtual')
WHEN  (340) ('AsnEncodeNumber       Procedure (String pType,Long pValue),Virtual')
WHEN  (341) ('FormatHTML {12}procedure (),Virtual')
WHEN  (342) ('_IANANameToNumber     Procedure (String pIANAName),Long,Virtual')
WHEN  (2)TIMES 38
WHEN  (1) ('CreatePicture {14}Procedure(<<String pType>,Long pFlag=0),String,Virtual')
WHEN  (2) ('CreateDatePicture {10}Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (3) ('CreateTimePicture {10}Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (4) ('CreateTimeHoursPicture     Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (5) ('CreateStringPicture        Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (6) ('CreateScientificPicture    Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (7) ('CreateNumericPicture       Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (8) ('CreatePatternPicture       Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (9) ('CreateKeyInPicture {9}Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (10) ('CreateUnixTimeStampPicture Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (11) ('CreateHexPicture {11}Procedure(Long pFlag=0),String,Proc,Virtual')
WHEN  (12) ('ParsePicture {15}Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (13) ('ParseDatePicture {11}Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (14) ('ParseTimePicture {11}Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (15) ('ParseTimeHoursPicture      Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (16) ('ParseStringPicture {9}Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (17) ('ParseScientificPicture     Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (18) ('ParseNumericPicture        Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (19) ('ParsePatternPicture        Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (20) ('ParseKeyInPicture {10}Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (21) ('ParseUnixTimeStampPicture  Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (22) ('ParseHexPicture {12}Procedure(<<String pPic>),Long,Proc,Virtual')
WHEN  (23) ('InterpretPicture {11}Procedure(<<String pPic>),String,Proc,Virtual')
WHEN  (24) ('InterpretDatePicture       Procedure(),String,Proc,Virtual')
WHEN  (25) ('InterpretTimePicture       Procedure(),String,Proc,Virtual')
WHEN  (26) ('InterpretTimeHoursPicture  Procedure(),String,Proc,Virtual')
WHEN  (27) ('InterpretStringPicture     Procedure(),String,Proc,Virtual')
WHEN  (28) ('InterpretScientificPicture Procedure(),String,Proc,Virtual')
WHEN  (29) ('InterpretNumericPicture    Procedure(),String,Proc,Virtual')
WHEN  (30) ('InterpretPatternPicture    Procedure(),String,Proc,Virtual')
WHEN  (31) ('InterpretKeyInPicture      Procedure(),String,Proc,Virtual')
WHEN  (32) ('InterpretUnixTimeStampPicture Procedure(),String,Proc,Virtual')
WHEN  (33) ('InterpretHexPicture        Procedure(),String,Proc,Virtual')
WHEN  (34) ('Trace {22}Procedure (string errMsg), virtual')
WHEN  (35) ('_block {21}Procedure(*String pPic, String pAlphabet,*Long pPos,Long pMaxLen),String,Virtual')
WHEN  (36) ('_block {21}Procedure(String pPic, String pAlphabet,*Long pPos,Long pMaxLen),String,Virtual')
WHEN  (37) ('_blockbound {16}Procedure(*String pPic, String pBoundary,*Long pPos),String,Virtual')
WHEN  (38) ('_blockbound {16}Procedure(String pPic, String pBoundary,*Long pPos),String,Virtual')
WHEN  (3)TIMES 4
WHEN  (1) ('Trace {22}Procedure (string errMsg), virtual')
WHEN  (2) ('UnixToClarionDate {10}Procedure (Real pDateTime,Long pMilli=-1),Long,Virtual')
WHEN  (3) ('UnixToClarionTime {10}Procedure (Real pDateTime,Long pMilli=-1),Long,Virtual')
WHEN  (4) ('ClarionToUnixDate {10}Procedure (Long pDate, Long pTime,Long pMilli=false),Real,Virtual')
WHEN  (4)TIMES 11
WHEN  (1) ('FormatValue {16}Procedure (String pValue,<<String pPicture>,Long pFlag=0),String,Virtual')
WHEN  (2) ('FormatDate {17}Procedure (Real pValue,string pPicture,Long pFlag=0),String,Virtual')
WHEN  (3) ('FormatDate {17}Procedure (Real pValue,StringPicture pPic,Long pFlag=0),String,Virtual')
WHEN  (4) ('Week {23}Procedure (Long pValue, *Long pYear, *Long pWeek, *Long pDay),Virtual')
WHEN  (5) ('FormatTime {17}Procedure (Real pValue,string pPicture,Long pFlag=0),String,Virtual')
WHEN  (6) ('FormatTime {17}Procedure (Real pValue,StringPicture pPic,Long pFlag=0),String,Virtual')
WHEN  (7) ('FormatTimeHours {12}Procedure (Real pValue,String pPicture,Long pFlag=0),String,Virtual')
WHEN  (8) ('FormatNumber {15}Procedure (Real pValue,String pPicture,Long pFlag=0),String,Virtual')
WHEN  (9) ('FormatUnixTimeStamp        Procedure (Real pValue,StringPicture pPic,Long pFlag=0),String,Virtual')
WHEN  (10) ('FormatHex {18}Procedure (String pValue,StringPicture pPic,Long pFlag=0),String,Virtual')
WHEN  (11) ('FormatPattern {14}Procedure (String pValue,StringPicture pPic,Long pFlag=0),String,Virtual')
WHEN  (5)TIMES 12
WHEN  (1) ('Translate {18}Procedure (String pText),String,Virtual')
WHEN  (2) ('DateFromWeek {15}Procedure(String pWeek, Long pYear, Long pDay),Long,Virtual')
WHEN  (3) ('DeformatValue {14}Procedure (String pValue,<<String pPicture>),String,Virtual')
WHEN  (4) ('DeformatScientific {9}Procedure (String pValue,<<String pPicture>),String,Virtual')
WHEN  (5) ('DeformatPattern {12}Procedure (String pValue,<<String pPicture>),String,Virtual')
WHEN  (6) ('DeformatHex {16}Procedure (String pValue,<<String pPicture>),String,Virtual')
WHEN  (7) ('DeformatNumber {13}Procedure (String pValue,<<String pPicture>),String,Virtual')
WHEN  (8) ('DeformatTimeHours {10}Procedure (String pValue,<<String pPicture>),Real,Virtual')
WHEN  (9) ('DeformatTime {15}Procedure (String pValue,<<String pPicture>),Real,Virtual')
WHEN  (10) ('DeformatDate {15}Procedure (String pValue,<<String pPicture>),Real,Virtual')
WHEN  (11) ('DeformatDateText {11}Procedure (Long pNumberofParts, String pPart1, String pPart2, String pPart3, String pSep),Real,Virtual')
WHEN  (12) ('DeformatUnixTimeStamp      PROCEDURE (String pValue,<<String pPicture>),Real,Virtual')

%dImplements8Cx DEPEND %dClasses8Bx MULTI LONG TIMES 0

%dImplements8C DEPEND %dImplements8Cx DEFAULT TIMES 0

%dInterfaces8Bx MULTI LONG  ()
%dInterfaces8B DEPEND %dInterfaces8Bx DEFAULT TIMES 0

%dInterfaceINCFile DEPEND %dInterfaces8Bx DEFAULT TIMES 0

%dMethods8Dx DEPEND %dInterfaces8Bx MULTI LONG TIMES 0

%dMethods8D DEPEND %dMethods8Dx DEFAULT TIMES 0

%dAdditionalINCFiles MULTI LONG  ()
%dAdditionalINCFile DEPEND %dAdditionalINCFiles DEFAULT TIMES 0

%dClassVersion DEFAULT  ('80660')
[PERSIST]
%SaveCreateLocalMap DEFAULT  ('1')
%GenerationCompleted DEPEND %Module DEFAULT TIMES 11
WHEN  ('MiniAppFrame.CLW') ('1')
WHEN  ('TestApp.clw') ('1')
WHEN  ('TestApp001.clw') ('1')
WHEN  ('TestApp002.clw') ('1')
WHEN  ('TestApp003.clw') ('1')
WHEN  ('TestApp004.clw') ('1')
WHEN  ('TestApp005.clw') ('1')
WHEN  ('TestApp006.clw') ('1')
WHEN  ('TestApp007.clw') ('1')
WHEN  ('TestApp008.clw') ('1')
WHEN  ('Tests.clw') ('1')

%LastTarget32 DEFAULT  ('1')
%LastProgramExtension DEFAULT  ('EXE')
%LastApplicationDebug DEFAULT  ('1')
%LastApplicationLocalLibrary DEFAULT  ('')
[PROJECT]
-- NAMESPACE TestApp
-- OUTPUTPATH L:\c11\sca\LibSrc\MiniAppFrame
#system win32 exe
#model clarion dll
#pragma debug(vid=>full)
#pragma define(StringTheoryLinkMode=>1) -- GENERATED
#pragma define(StringTheoryDllMode=>0) -- GENERATED
#pragma define(MD5=>0) -- GENERATED
#pragma define(_ABCDllMode_=>0) -- GENERATED
#pragma define(_ABCLinkMode_=>1) -- GENERATED
#compile "TestApp.clw" -- GENERATED
#compile "Tests.clw" -- GENERATED
#compile "MiniAppFrame.CLW" -- GENERATED
#compile "TestApp001.clw" -- GENERATED
#compile "TestApp002.clw" -- GENERATED
#compile "TestApp003.clw" -- GENERATED
#compile "TestApp004.clw" -- GENERATED
#compile "TestApp005.clw" -- GENERATED
#compile "TestApp006.clw" -- GENERATED
#compile "TestApp007.clw" -- GENERATED
#compile "TestApp008.clw" -- GENERATED
#compile "TestApp_BC0.CLW" -- GENERATED
#compile "TESTAPP_BC.CLW" -- GENERATED
#pragma link("C%V%tps%X%%L%.lib") -- GENERATED
#link "TestApp.EXE"
[PROGRAM]
[COMMON]
FROM ABC ABC
MODIFIED '2021/10/30' '22:11:40'
[EMBED]
EMBED %GlobalMap
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
StringToFile(STRING pStr,STRING pFileName)
DebugView(STRING pStr)
MODULE('win32')
  DebugViewApi(*CSTRING cStr),PASCAL,RAW,NAME('OutputDebugStringA')      
  sleep(LONG),PASCAL
END
[END]
EMBED %ProgramProcedures
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
StringToFile        PROCEDURE(STRING pStr,STRING pFileName)
bufSize               EQUATE(32768)
dosFile               FILE,DRIVER('DOS'),CREATE
buf                     RECORD;STRING(bufSize).
                      END
pos                   LONG(1)
  CODE  
  dosFile{PROP:Name} = pFileName
  CREATE(dosFile)
  IF ERRORCODE() THEN STOP(ERRORCODE()&' '&ERROR()&' '&ERRORFILE());RETURN.
  OPEN(dosFile)
  LOOP UNTIL pos > LEN(pStr)
    dosFile.Buf = pStr[ pos : LEN(pStr) ]
    ADD(dosFile,CHOOSE(pos + bufSize > LEN(pStr), |
        LEN(pStr) - pos + 1, |
        bufSize))
    pos += bufSize
  .
  CLOSE(dosfile)
    
DebugView           PROCEDURE(STRING pStr)
tcstr                 CSTRING(SIZE(pStr)+3)
  CODE
  tcstr = '|'&pStr&'|'
  DebugViewApi(tcstr)
[END]
EMBED %AfterGlobalIncludes
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 4000
PROPERTY:END
INCLUDE('MiniAppFrame.inc'),ONCE
MiniAppFrame        MiniAppFrameClass,THREAD

TestGroup           GROUP,TYPE
TestString            STRING(100)
TestNumber            DECIMAL(15,6)
TestDate              DATE
TestTime              TIME
                    END

TestQueue           QUEUE,TYPE
TestString            STRING(100)
TestNumber            DECIMAL(15,6)
                    END
[END]
[END]
[END]
[MODULE]
NAME 'Tests.clw'
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/06/12' '11:00:56'
[PROCEDURE]
NAME Tests
GLOBAL
[COMMON]
FROM ABC Source
MODIFIED '2021/10/30' '22:23:51'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
  MAP
AssertEqual PROCEDURE(? pExpected,? pActual,STRING pInfo),LONG,PROC
  END  

TestsResult             ANY
[END]
EMBED %ProcessedCode
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  
  TestsResult = FORMAT(TODAY(),@D10)&' '&FORMAT(CLOCK(),@T04)
  
  DO TestStart
  DO TestStart1Parm
  DO TestStart2Parm
  DO TestStart3Parm
  DO TestStart3ParmSetupThreadSetValue
  DO TestStructures
  
  !DO TestStart3ParmSetupThreadNotify
  
  !StringToFile(TestsResult,'TestsResult.txt')
  !RUN('TestsResult.txt')
[END]
EMBED %LocalProcedures
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END

AssertEqual         PROCEDURE(? pExpected,? pActual,STRING pInfo)!,LONG,PROC
TestResult ANY
  CODE 
  
  TestResult = 'Thread: '&THREAD()&'<13,10>' & |
      CHOOSE(pExpected = pActual,'ok','--')&'<9>'& |
      pInfo&'<13,10>' & |
      'Exp: <'&pExpected&'>'&'<13,10>'& |
      'Act: <'&pActual&'>' & |          
      '<13,10>'
  
  DebugView(TestResult)
  
  TestsResult =  CHOOSE(TestsResult = '','',TestsResult&'<13,10>')& |         
      TestResult  
  
  IF pExpected <> pActual
    SETCLIPBOARD(TestResult)
    STOP(TestResult)
  .
  
  RETURN CHOOSE(pExpected = pActual)
    
[END]
EMBED %ProcedureRoutines
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3500
PROPERTY:END

TestStart           ROUTINE
  
  !Arrange
  MiniAppFrame.InitCaller
  !MiniAppFrame.SetShowFrame(TRUE)
  
  !Act
  MiniAppFrame.Start(MdiProcess,30000) 
  
  !Assert
  AssertEqual('152',MiniAppFrame.GetValue('sum'),'0 Parm')

TestStart1Parm             ROUTINE
   
  !Arrange
  MiniAppFrame.InitCaller
  !Act  
  MiniAppFrame.Start(MdiProcess1Parm,30000,'123') 
  !Assert
  AssertEqual('2366',MiniAppFrame.GetValue('sum'),'1 Parm')
  
TestStart2Parm      ROUTINE
   
  !Arrange
  MiniAppFrame.InitCaller
  !Act
  MiniAppFrame.Start(MdiProcess2Parm,30000,'123','456')   
  !Assert
  AssertEqual('10574',MiniAppFrame.GetValue('sum'),'2 Parm')

TestStart3Parm      ROUTINE

  !Arrange
  MiniAppFrame.InitCaller
  !Act
  MiniAppFrame.Start(MdiProcess3Parm,30000,'123','456','789')     
  !Assert
  AssertEqual('24776',MiniAppFrame.GetValue('sum'),'3 Parm')
  
TestStart3ParmSetupThreadSetvalue    ROUTINE

  LOOP 10 TIMES    
    !Arrange
    MiniAppFrame.InitCaller
    MiniAppFrame.SetValue('VAL',987)    
    !Act
    MiniAppFrame.Start(MdiProcess3ParmSetupThreadSetVariable,30000,'123','456','789') 
    !Assert
    AssertEqual('42542',MiniAppFrame.GetValue('sum'),'3 Parm Setup Thread SetValue')
  .
  
TestStructures      ROUTINE  
  DATA
Group1  LIKE(TestGroup)
Group2  LIKE(TestGroup)
Queue1  QUEUE(TestQueue)
        END
  CODE
  !Arrange
  Group1.TestString = 'abcdef'
  Group1.TestNumber = 123456.78  
  Group1.TestDate = DATE(10,30,2021)
  Group1.TestTime = 13*60*60*100 + 32*60*100 + 25*100 + 1    
  CLEAR(Queue1)
  Queue1.TestNumber = 1
  Queue1.TestString = 'ONE'
  ADD(Queue1)
  CLEAR(Queue1)
  Queue1.TestNumber = 2
  Queue1.TestString = 'TWO'
  ADD(Queue1)
  
  MiniAppFrame.InitCaller
  MiniAppFrame.StoreGroupValues(Group1)  
  MiniAppFrame.StoreGroup('TestGroup1',Group1)  
  MiniAppFrame.StoreQueue('TestQ1',Queue1)
  !Act
  MiniAppFrame.Start(MdiProcessStructures,30000) 
  !Assert
  AssertEqual('abcdefGHI',MiniAppFrame.GetValue('TestString'),'Structure, group value teststring')
  AssertEqual(123456.789012,MiniAppFrame.GetValue('TestNumber'),'Structure, group value testnumber')
  AssertEqual(DATE(10,30,2021)+7,MiniAppFrame.GetValue('TestDate'),'Structure, group value testdate')
  AssertEqual(13*60*60*100 + 32*60*100 + 25*100 + 1 + 500,MiniAppFrame.GetValue('TestTime'),'Structure, group value testtime')

  MiniAppFrame.RetrieveGroup('TestGroup1',Group2)
  AssertEqual('abcdefJKL',Group2.TestString,'Structure, store retrieve group')
  AssertEqual(123456.789024,Group2.TestNumber,'Structure, store retrieve group')
  AssertEqual(DATE(10,30,2021)+14,Group2.TestDate,'Structure, store retrieve group')
  AssertEqual(13*60*60*100 + 32*60*100 + 25*100 + 1 + 1000,Group2.TestTime,'Structure, store retrieve group')
  CLEAR(Group2)
  MiniAppFrame.RetrieveGroup('TestGroup2',Group2)
  AssertEqual('abcdefJKL',Group2.TestString,'Structure, store retrieve group 2')
  AssertEqual(123456.789024,Group2.TestNumber,'Structure, store retrieve group 2')
  AssertEqual(DATE(10,30,2021)+14,Group2.TestDate,'Structure, store retrieve group 2')
  AssertEqual(13*60*60*100 + 32*60*100 + 25*100 + 1 + 1000,Group2.TestTime,'Structure, store retrieve group 2')
  
  FREE(Queue1)
  CLEAR(Queue1)
  MiniAppFrame.RetrieveQueue('TestQ1',Queue1)
  GET(Queue1,2)
  AssertEqual(1002,Queue1.TestNumber,'Structure, store retrieve queue')
  AssertEqual('TWOxyz',Queue1.TestString,'Structure, store queue')

TestStart3ParmSetupThreadNotify    ROUTINE
   
  LOOP 3 TIMES
    !Arrange
    MiniAppFrame.InitCaller
    MiniAppFrame.Notify(1001,654)
    MiniAppFrame.SetNotifyDelay(50) ! 0.50 seconds
    MiniAppFrame.SetMaxExecutiontime(1000) !10.00 seconds
    !Act
    MiniAppFrame.Start(MdiProcess3ParmSetupThreadNotify,30000,'123','456','789') 
    !Assert
    AssertEqual('36548',MiniAppFrame.GetValue('sum'),'3 Parm Setup Thread Notify')
  .  
  
[END]
[END]
[CALLS]
MdiProcess
MdiProcess1Parm
MdiProcess2Parm
MdiProcess3Parm
MdiProcess3ParmSetupThreadNotify
MdiProcess3ParmSetupThreadSetVariable
MdiProcessStructures
[END]
[MODULE]
NAME 'MiniAppFrame.CLW'
[COMMON]
FROM ABC GENERATEDClass
MODIFIED '2021/07/06' '23:52:55'
[PROCEDURE]
NAME MiniAppFrame
[COMMON]
FROM ABC SourceClass
MODIFIED '2021/10/30' '23:04:43'
[PROMPTS]
%GenerateMemberAsGeneric LONG  (1)
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %ClassImplementationSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
!Carlos Gutierrez   carlosg@sca.mx    https://github.com/CarlosGtrz
!
!MIT License
!
!Copyright (c) 2021 Carlos Gutierrez Fragosa
!
!Permission is hereby granted, free of charge, to any person obtaining a copy
!of this software and associated documentation files (the "Software"), to deal
!in the Software without restriction, including without limitation the rights
!to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
!copies of the Software, and to permit persons to whom the Software is
!furnished to do so, subject to the following conditions:
!
!The above copyright notice and this permission notice shall be included in all
!copies or substantial portions of the Software.
!
!THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
!IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
!FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
!AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
!LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
!OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
!SOFTWARE.

  MAP 
    MODULE('Win32')
      maf_EnableWindow(UNSIGNED,BOOL),BOOL,PASCAL,PROC,NAME('EnableWindow')
      maf_OutputDebugString(*CSTRING cstr),PASCAL,RAW,NAME('OutputDebugStringA')      
      maf_Sleep(LONG milliseconds),PASCAL,NAME('sleep')
    END
MiniAppFrameProc    PROCEDURE(STRING pShowFrame)
  END

  INCLUDE('cwsynchc.inc'),ONCE
  INCLUDE('FlatSerializer.inc'),ONCE

!Private global data
MiniAppFrame:cs     CriticalSection
MiniAppFrame:ThreadedVariable   LONG,THREAD
MiniAppFrame:MaxThreads EQUATE(500)

MiniAppFrameGlobal  GROUP
IsActive              BOOL
AppFrameStarted       LONG
AppFrameThread        LONG
ActiveThreads         LONG
Parent                UNSIGNED,DIM(MiniAppFrame:MaxThreads)
                    END

NOTIFY:maf_Destruct EQUATE(2001)

!Types
ValuesQueueType     QUEUE,TYPE
ValueNameUpper        STRING(60)
Value                 ANY
                    END

ValuesQueueCSClass  CLASS,TYPE
Store                 PROCEDURE(STRING pValueName,? pValue)
Retrieve              PROCEDURE(STRING pValueName),?
ClearQueue            PROCEDURE
Construct             PROCEDURE
Destruct              PROCEDURE
ValuesQueue           &ValuesQueueType,PRIVATE
cs                    &CriticalSection,PRIVATE
                    END


maf:ErrorNotInited  STRING('001InitCaller or InitChild must be called before accesing values')
maf:ErrorInitedAsCaller STRING('002Instance was initialized as Caller, cannot be initialized as Child')
maf:ErrorInitedAsChild  STRING('003Instance was initialized as Child, cannot be initialized as Caller or call Start()')
                      
MiniAppFrameClass.InitCaller    PROCEDURE
  CODE
  
  IF SELF.ChildInited THEN 
    SELF.RaiseError(maf:ErrorInitedAsChild)
    RETURN
  .
  SELF.CallerInited = TRUE  
  
  MiniAppFrameGlobal.IsActive = TRUE  
  CLEAR(SELF.NotifyCode)
  CLEAR(SELF.NotifyParameter)
  CLEAR(SELF.NotifyDelay)
  CLEAR(SELF.MaxExecutionTime)
  CLEAR(SELF.ShowFrame)
  CLEAR(SELF.ChildThread)
  SELF.SetupValuesQueueCS
  SELF.ClearValues
  
MiniAppFrameClass.InitChild PROCEDURE
ptr                           &POINTER_T
  CODE
  
  IF SELF.CallerInited THEN
    SELF.RaiseError(maf:ErrorInitedAsCaller)
    RETURN
  .
  
  IF INRANGE(THREAD(),1,MiniAppFrame:MaxThreads) AND |
      INSTANCE(SELF.ValuesQueueCSAddress, MiniAppFrameGlobal.Parent[THREAD()] )
    ptr &= INSTANCE(SELF.ValuesQueueCSAddress,MiniAppFrameGlobal.Parent[THREAD()])
    IF ptr
      SELF.ValuesQueueCSAddress = ptr
      SELF.ValuesQueueCS &= SELF.ValuesQueueCSAddress+0
      SELF.ChildInited = TRUE
      RETURN
    .
  .
  
  !Fallback strategy: wait for the caller to set the address variable
  LOOP
    IF SELF.ValuesQueueCSAddress
      SELF.ValuesQueueCS &= SELF.ValuesQueueCSAddress+0
      BREAK
    .
    SELF.Sleep(1) ! .01 Seconds
  .
  SELF.ChildInited = TRUE
  

MiniAppFrameClass.IsActive  PROCEDURE!,BOOL
  CODE
  
  RETURN MiniAppFrameGlobal.IsActive

MiniAppFrameClass.StoreValue    PROCEDURE(STRING pValueName,? pValue)
  CODE  
  
  IF NOT (SELF.CallerInited OR SELF.ChildInited)
    SELF.RaiseError(maf:ErrorNotInited)
    RETURN
  .
  IF SELF.ValuesQueueCS &= NULL THEN RETURN.
  SELF.ValuesQueueCS.Store(pValueName,pValue)
      
MiniAppFrameClass.RetrieveValue PROCEDURE(STRING pValueName)!,?
  CODE

  IF NOT (SELF.CallerInited OR SELF.ChildInited)
    SELF.RaiseError(maf:ErrorNotInited)
    RETURN ''
  .
  IF SELF.ValuesQueueCS &= NULL
    RETURN ''
  .
  RETURN SELF.ValuesQueueCS.Retrieve(pValueName)

MiniAppFrameClass.SetValue  PROCEDURE(STRING pValueName,? pValue)
  CODE  
  
  SELF.StoreValue(pValueName,pValue)
        
MiniAppFrameClass.GetValue  PROCEDURE(STRING pValueName)!,?
  CODE
  
  RETURN SELF.RetrieveValue(pValueName)

MiniAppFrameClass.ClearValues   PROCEDURE
idx                               LONG
  CODE  
  
  IF NOT (SELF.CallerInited OR SELF.ChildInited)
    SELF.RaiseError(maf:ErrorNotInited)
    RETURN
  .
  IF SELF.ValuesQueueCS &= NULL THEN RETURN.
  SELF.ValuesQueueCS.ClearQueue
  
MiniAppFrameClass.StoreGroupValues  PROCEDURE(*GROUP pGroup)
fs                                    FlatSerializer
idx                                   LONG
  CODE
  fs.InitTSV
  fs.SetAlwaysQuoteStrings(FALSE)  
  fs.LoadString(fs.SerializeGroup(pGroup))  
  LOOP idx = 1 TO fs.GetColumnsCount()
    SELF.StoreValue( |
        fs.GetColumnName(idx), |
        fs.GetValueByName(fs.GetColumnName(idx)) |
        )
  .

MiniAppFrameClass.StoreGroup    PROCEDURE(STRING pValueName,*GROUP pGroup)
fs                                FlatSerializer
  CODE
  fs.InitTSV
  fs.SetAlwaysQuoteStrings(FALSE)  
  SELF.StoreValue(pValueName,fs.SerializeGroup(pGroup))
  
MiniAppFrameClass.RetrieveGroup PROCEDURE(STRING pValueName,*GROUP pGroup)
fs                                FlatSerializer
  CODE
  fs.InitTSV
  fs.LoadString(SELF.RetrieveValue(pValueName))
  fs.DeSerializeToGroup(pGroup)

MiniAppFrameClass.StoreQueue    PROCEDURE(STRING pValueName,*QUEUE pQueue)
fs                                FlatSerializer
  CODE
  fs.InitTSV
  fs.SetAlwaysQuoteStrings(FALSE)  
  SELF.StoreValue(pValueName,fs.SerializeQueue(pQueue))
  
MiniAppFrameClass.RetrieveQueue PROCEDURE(STRING pValueName,*QUEUE pQueue)
fs                                FlatSerializer
  CODE    
  fs.InitTSV
  fs.LoadString(SELF.RetrieveValue(pValueName))
  fs.DeSerializeToQueue(pQueue)
  
MiniAppFrameClass.Start PROCEDURE(MAF_PROC procName,UNSIGNED stack=0)
  CODE
  
  IF SELF.ChildInited THEN 
    SELF.RaiseError(maf:ErrorInitedAsChild)
    RETURN
  .
  MiniAppFrameGlobal.IsActive = TRUE  
  SELF.SetupValuesQueueCS
  SELF.VerifyAppFrame
  SELF.IncrementActiveThreads
  SELF.ChildThread = START(procName,stack)
  SELF.WaitForChildThread
  SELF.DecrementActiveThreads
  
MiniAppFrameClass.Start PROCEDURE(MAF_PROC1 procName,UNSIGNED stack=0,STRING passedValue)
  CODE  
  
  IF SELF.ChildInited THEN 
    SELF.RaiseError(maf:ErrorInitedAsChild)
    RETURN
  .
  MiniAppFrameGlobal.IsActive = TRUE  
  SELF.SetupValuesQueueCS
  SELF.VerifyAppFrame
  SELF.IncrementActiveThreads
  SELF.ChildThread = START(procName,stack,passedValue)
  SELF.WaitForChildThread
  SELF.DecrementActiveThreads
  
MiniAppFrameClass.Start PROCEDURE(MAF_PROC2 procName,UNSIGNED stack=0,STRING passedValue1,STRING passedValue2)
  CODE
  
  IF SELF.ChildInited THEN 
    SELF.RaiseError(maf:ErrorInitedAsChild)
    RETURN
  .
  MiniAppFrameGlobal.IsActive = TRUE  
  SELF.SetupValuesQueueCS
  SELF.VerifyAppFrame
  SELF.IncrementActiveThreads
  SELF.ChildThread = START(procName,stack,passedValue1,passedValue2)
  SELF.WaitForChildThread
  SELF.DecrementActiveThreads

MiniAppFrameClass.Start PROCEDURE(MAF_PROC3 procName,UNSIGNED stack=0,STRING passedValue1,STRING passedValue2,STRING passedValue3)
  CODE
  
  IF SELF.ChildInited THEN 
    SELF.RaiseError(maf:ErrorInitedAsChild)
    RETURN
  .
  MiniAppFrameGlobal.IsActive = TRUE  
  SELF.SetupValuesQueueCS
  SELF.VerifyAppFrame  
  SELF.IncrementActiveThreads
  SELF.ChildThread = START(procName,stack,passedValue1,passedValue2,passedValue3)
  SELF.WaitForChildThread
  SELF.DecrementActiveThreads
  
MiniAppFrameClass.GetActiveThreads  PROCEDURE()!,LONG
  CODE
  
  RETURN MiniAppFrameGlobal.ActiveThreads
  
MiniAppFrameClass.Sleep PROCEDURE(LONG pHundrethsSecond)
  CODE
  
  maf_Sleep(pHundrethsSecond*10) !Convert to milliseconds
  
MiniAppFrameClass.Kill  PROCEDURE
  CODE
  
  IF MiniAppFrameGlobal.AppFrameThread
    NOTIFY(NOTIFY:maf_Destruct,MiniAppFrameGlobal.AppFrameThread)
  .    

MiniAppFrameClass.RaiseError    PROCEDURE(LONG pErrorNumber,STRING pErrorText)!,VIRTUAL                          
  CODE
  
  STOP(pErrorText&' ('&pErrorNumber&')')  

MiniAppFrameClass.Notify    PROCEDURE(UNSIGNED notifyCode,LONG parameter=0)  
  CODE
  
  SELF.NotifyCode = notifyCode
  SELF.NotifyParameter = parameter

MiniAppFrameClass.SetNotifyDelay    PROCEDURE(LONG pHundrethsSecond)
  CODE
  
  SELF.NotifyDelay = pHundrethsSecond
  
MiniAppFrameClass.SetMaxExecutionTime   PROCEDURE(LONG pHundrethsSecond)
  CODE
  
  SELF.MaxExecutionTime = pHundrethsSecond
  
MiniAppFrameClass.VerifyAppFrame    PROCEDURE!,PRIVATE
  CODE
  
  IF MiniAppFrameGlobal.AppFrameThread THEN RETURN.
  MiniAppFrame:cs.Wait
  IF NOT MiniAppFrameGlobal.AppFrameStarted
    MiniAppFrameGlobal.AppFrameStarted = 1
    MiniAppFrame:cs.Release    

    RESUME(START(MiniAppFrameProc,,SELF.ShowFrame))  

  ELSE
    MiniAppFrame:cs.Release    
  .  
  LOOP
    IF MiniAppFrameGlobal.AppFrameThread THEN BREAK.
    SELF.Sleep(1) ! .01 seconds
  .

MiniAppFrameClass.WaitForChildThread    PROCEDURE!,PRIVATE
MiniAppFrameWindow                        WINDOW,AT(,,180,15),SYSTEM,MDI,TIMER(10)
                                          END
setupDone                                 LONG
startTime                                 LONG
elapsedTime                               LONG
notifCode                                 LONG
notifThread                               LONG
  CODE

  IF INRANGE(SELF.ChildThread,1,MiniAppFrame:MaxThreads)
    MiniAppFrameGlobal.Parent[SELF.ChildThread] = THREAD()
  .    

  OPEN(MiniAppFrameWindow)
  IF SELF.ShowFrame
    MiniAppFrameWindow{PROP:Text} = 'Thr:'&THREAD()&' MxT:'&SELF.MaxExecutionTime&' NotC:'&SELF.NotifyCode&' NotP:'&SELF.NotifyParameter&' NotD:'&SELF.NotifyDelay
    DISPLAY
  ELSE
    MiniAppFrameWindow{PROP:Hide} = TRUE
    maf_EnableWindow(MiniAppFrameWindow{PROP:Handle},0)
  .
  
  startTime = CLOCK()
  ACCEPT
    IF NOT setupDone
      IF SELF.ChildThread AND INSTANCE(MiniAppFrame:ThreadedVariable,SELF.ChildThread)
        IF SELF.SetupChildThread()
          setupDone = 1
        .        
      .      
    .
    CASE EVENT()
      OF EVENT:CloseWindow
        CYCLE
      OF EVENT:Timer
        elapsedTime = CLOCK() - startTime
        IF elapsedTime < 0
          elapsedTime += 24*60*60*100
        .        
        IF SELF.MaxExecutionTime AND elapsedTime > SELF.MaxExecutionTime
          POST(EVENT:CloseDown,SELF.ChildThread)
          SELF.MaxExecutionTime = 0
        .        
        IF SELF.NotifyCode AND elapsedTime > SELF.NotifyDelay
          IF INSTANCE(MiniAppFrame:ThreadedVariable,SELF.ChildThread)
            NOTIFY(SELF.NotifyCode,SELF.ChildThread,SELF.NotifyParameter)
            SELF.NotifyCode = 0
            SELF.NotifyParameter = 0
          .          
        .          
        IF setupDone AND NOT INSTANCE(MiniAppFrame:ThreadedVariable,SELF.ChildThread)
          !Fallback strategy: if there is no instance of the variable, the tread no longer exists
          BREAK
        .
      OF EVENT:Notify
        IF NOTIFICATION(notifCode,notifThread)
          IF notifCode = NOTIFY:maf_Destruct AND notifThread = SELF.ChildThread
            BREAK
          .
        .        
    .
  END
  CLOSE(MiniAppFrameWindow)
  SELF.ChildThread = 0
  
MiniAppFrameClass.SetUpChildThread  PROCEDURE
ptr                                   &POINTER_T
  CODE
  
  IF SELF.ValuesQueueCSOwner AND SELF.ChildThread
    IF INSTANCE(SELF.ValuesQueueCSAddress,SELF.ChildThread) !Check if child thread is running
      !Fallback strategy: set the address variable in case the child can't get its parent instance
      ptr &= INSTANCE(SELF.ValuesQueueCSAddress,SELF.ChildThread) !Get child thread's address of ValuesQueueCSAddress 
      IF ptr !Child alread got address
        RETURN TRUE 
      .      
      ptr =  INSTANCE(SELF.ValuesQueueCS,THREAD())                !Set child thread's ValuesQueueCSAddress value to address of this thread's ValuesQueueCS
      RETURN TRUE !The child thread is ready and running
    .
  .    
  RETURN FALSE
  
MiniAppFrameClass.IncrementActiveThreads    PROCEDURE!,PRIVATE
  CODE
  
  MiniAppFrame:cs.Wait
  MiniAppFrameGlobal.ActiveThreads += 1
  MiniAppFrame:cs.Release
  
MiniAppFrameClass.DecrementActiveThreads    PROCEDURE!,PRIVATE
  CODE
  
  MiniAppFrame:cs.Wait
  MiniAppFrameGlobal.ActiveThreads -= 1
  MiniAppFrame:cs.Release
 
MiniAppFrameClass.SetupValuesQueueCS    PROCEDURE!,PRIVATE
  CODE
  
  IF NOT SELF.ValuesQueueCS &= NULL THEN RETURN.
  SELF.ValuesQueueCS &= NEW ValuesQueueCsClass
  SELF.ValuesQueueCSAddress = INSTANCE(SELF.ValuesQueueCS,THREAD())  
  SELF.ValuesQueueCSOwner = TRUE
  
MiniAppFrameClass.Destruct  PROCEDURE
  CODE
  
  IF SELF.ValuesQueueCSOwner
    DISPOSE(SELF.ValuesQueueCS)
  . 
  IF INRANGE(THREAD(),1,MiniAppFrame:MaxThreads)
    NOTIFY(NOTIFY:maf_Destruct,MiniAppFrameGlobal.Parent[THREAD()])
  .  

MiniAppFrameClass.SetShowFrame  PROCEDURE(BOOL pShowFrame)
  CODE
  
  SELF.ShowFrame = pShowFrame

MiniAppFrameClass.DebugView PROCEDURE(STRING pStr)
pre                           STRING('maf')
lcstr                         CSTRING(SIZE(pre)+SIZE(pStr)+21)
  CODE
  
  lcstr = pre&'|Thread:'&THREAD()&'|'&pStr&'|'
  maf_OutputDebugString(lcstr)  
  
MiniAppFrameClass.RaiseError    PROCEDURE(STRING pError)!,PRIVATE
  CODE
  SELF.RaiseError( pError[1 : 3] , pError[4 : SIZE(pError) ] )
  
ValuesQueueCsClass.Store    PROCEDURE(STRING pValueName,? pValue)
  CODE
  
  IF SELF.ValuesQueue &= NULL THEN RETURN.
  SELF.cs.Wait
  CLEAR(SELF.ValuesQueue)
  SELF.ValuesQueue.ValueNameUpper = UPPER(pValueName)
  GET(SELF.ValuesQueue,SELF.ValuesQueue.ValueNameUpper)
  IF ERRORCODE() THEN ADD(SELF.ValuesQueue).
  SELF.ValuesQueue.Value &= NULL !Reset ANY type
  SELF.ValuesQueue.Value = pValue 
  PUT(SELF.ValuesQueue)
  SELF.cs.Release

ValuesQueueCsClass.Retrieve PROCEDURE(STRING pValueName)!,?
value                         ANY
  CODE
  
  IF SELF.ValuesQueue &= NULL THEN RETURN ''.
  SELF.cs.Wait
  CLEAR(SELF.ValuesQueue)
  SELF.ValuesQueue.ValueNameUpper = UPPER(pValueName)
  GET(SELF.ValuesQueue,SELF.ValuesQueue.ValueNameUpper)
  IF ERRORCODE() THEN
    SELF.cs.Release
    RETURN ''
  .
  value = SELF.ValuesQueue.Value
  SELF.cs.Release
  RETURN value
  
ValuesQueueCsClass.ClearQueue   PROCEDURE
idx                               LONG
  CODE
  
  IF SELF.ValuesQueue &= NULL THEN RETURN.
  SELF.cs.Wait
  LOOP idx = RECORDS(SELF.ValuesQueue) TO 1 BY -1
    GET(SELF.ValuesQueue,idx)
    SELF.ValuesQueue.Value &= NULL
    DELETE(SELF.ValuesQueue)
  .
  SELF.cs.Release

ValuesQueueCsClass.Construct    PROCEDURE
  CODE
  
  SELF.ValuesQueue &= NEW ValuesQueueType
  SELF.cs &= NEW CriticalSection  
    
ValuesQueueCsClass.Destruct PROCEDURE
  CODE

  SELF.ClearQueue
  DISPOSE(SELF.ValuesQueue)
  DISPOSE(SELF.cs)

MiniAppFrameProc    PROCEDURE(STRING pShowFrame)
MiniAppFrameFrame     APPLICATION,AT(,,400,200),SYSTEM,TIMER(10)
                      END
notifCode             LONG
  CODE  
  
  OPEN(MiniAppFrameFrame)
  IF pShowFrame = TRUE 
    MiniAppFrameFrame{PROP:Text} = 'Thr:'&THREAD()
    DISPLAY
  ELSE    
    MiniAppFrameFrame{PROP:Hide} = TRUE
    maf_EnableWindow(MiniAppFrameFrame{PROP:Handle},0)
  .
  ACCEPT
    CASE EVENT()
      OF EVENT:OpenWindow
        MiniAppFrameGlobal.AppFrameThread = THREAD()
      OF EVENT:CloseWindow
        CYCLE
      OF EVENT:Notify
        IF NOTIFICATION(notifCode) AND notifCode = NOTIFY:maf_Destruct
          BREAK
        .        
    .    
  END    
  
[END]
EMBED %ClassDeclarationSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
!Carlos Gutierrez   carlosg@sca.mx    https://github.com/CarlosGtrz
!
!MIT License
!
!Copyright (c) 2021 Carlos Gutierrez Fragosa
!
!Permission is hereby granted, free of charge, to any person obtaining a copy
!of this software and associated documentation files (the "Software"), to deal
!in the Software without restriction, including without limitation the rights
!to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
!copies of the Software, and to permit persons to whom the Software is
!furnished to do so, subject to the following conditions:
!
!The above copyright notice and this permission notice shall be included in all
!copies or substantial portions of the Software.
!
!THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
!IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
!FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
!AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
!LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
!OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
!SOFTWARE.

MiniAppFrameClass   CLASS,MODULE('MiniAppFrame.clw'),LINK('MiniAppFrame.clw',_ABCLinkMode_),DLL(_ABCDllMode_),TYPE

InitCaller            PROCEDURE
InitChild             PROCEDURE

IsActive              PROCEDURE,BOOL

SetValue              PROCEDURE(STRING pValueName,? pValue)
GetValue              PROCEDURE(STRING pValueName),?

StoreValue            PROCEDURE(STRING pValueName,? pValue)
RetrieveValue         PROCEDURE(STRING pValueName),?
ClearValues           PROCEDURE

StoreGroupValues      PROCEDURE(*GROUP pGroup)
StoreGroup            PROCEDURE(STRING pValueName,*GROUP pGroup)
RetrieveGroup         PROCEDURE(STRING pValueName,*GROUP pGroup)
StoreQueue            PROCEDURE(STRING pValueName,*QUEUE pQueue)
RetrieveQueue         PROCEDURE(STRING pValueName,*QUEUE pQueue)

Start                 PROCEDURE(MAF_PROC procName,UNSIGNED stack=0)
Start                 PROCEDURE(MAF_PROC1 procName,UNSIGNED stack=0,STRING passedValue)
Start                 PROCEDURE(MAF_PROC2 procName,UNSIGNED stack=0,STRING passedValue1,STRING passedValue2)
Start                 PROCEDURE(MAF_PROC3 procName,UNSIGNED stack=0,STRING passedValue1,STRING passedValue2,STRING passedValue3)

GetActiveThreads      PROCEDURE(),LONG
Sleep                 PROCEDURE(LONG pHundrethsSecond)

Kill                  PROCEDURE

RaiseError            PROCEDURE(LONG pErrorNumber,STRING pErrorText),VIRTUAL                          

Notify                PROCEDURE(UNSIGNED notifyCode,LONG parameter=0)
SetNotifyDelay        PROCEDURE(LONG pHundrethsSecond)
SetMaxExecutionTime   PROCEDURE(LONG pHundrethsSecond)

VerifyAppFrame        PROCEDURE,PRIVATE
WaitForChildThread    PROCEDURE,PRIVATE
SetUpChildThread      PROCEDURE,BOOL,PRIVATE

IncrementActiveThreads    PROCEDURE,PRIVATE
DecrementActiveThreads    PROCEDURE,PRIVATE

SetupValuesQueueCS    PROCEDURE,PRIVATE

Destruct              PROCEDURE

SetShowFrame          PROCEDURE(BOOL pShowFrame)
DebugView             PROCEDURE(STRING pStr)

RaiseError            PROCEDURE(STRING pError),PRIVATE

NotifyCode            UNSIGNED,PRIVATE
NotifyParameter       UNSIGNED,PRIVATE
NotifyDelay           LONG,PRIVATE
MaxExecutionTime      LONG,PRIVATE
ShowFrame             BOOL,PRIVATE

ChildThread           SIGNED,PRIVATE
CallerInited          BOOL,PRIVATE
ChildInited           BOOL,PRIVATE
ValuesQueueCS         &ValuesQueueCSClass,PRIVATE
ValuesQueueCSAddress  POINTER_T,PRIVATE
ValuesQueueCSOwner    BOOL,PRIVATE
                    END

  MAP
    MAF_PROC(),TYPE
    MAF_PROC1(STRING),TYPE
    MAF_PROC2(STRING,STRING),TYPE
    MAF_PROC3(STRING,STRING,STRING),TYPE
  END
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/07/03' '20:37:23'
[PROCEDURE]
NAME MdiProcess1Parm
PROTOTYPE '(STRING pStr)'
PARAMETERS '(STRING pStr)'
[COMMON]
FROM ABC Process
MODIFIED '2021/10/27' '16:00:12'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('1ffc0c27-4da4-4a7e-919a-d7c4327faad9')
[FILES]
[PRIMARY]
Orders
[INSTANCE]
0
[KEY]
ORD:KeyOrderDate
[PROMPTS]
%RangeLimitType DEFAULT  ('Current Value')
%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepRealClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 2
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED')
WHEN  ('Process') ('TakeRecord {13}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('')
WHEN  ('WindowToolbar') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (1)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddSortFieldAssistedNoCase DEPEND %AddSortFieldsAssisted LONG TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSortFieldAssistedNoCase DEPEND %AddConditionalSortFieldsAssisted LONG TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

%HotFieldBound DEPEND %HotFields LONG TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?Progress:Cancel') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %ProcessManagerMethodCodeSection
[INSTANCES]
WHEN 'TakeRecord'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3800
PROPERTY:END
loc:sum += ORD:CustNumber + ORD:OrderNumber + pStr
[END]
[END]
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
loc:sum           LONG
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 8000
PROPERTY:END
IF MiniAppFrame.IsActive()
  MiniAppFrame.InitChild
  MiniAppFrame.SetValue('sum',loc:sum)  
.  
[END]
[END]
[END]
[END]
[WINDOW]
ProgressWindow WINDOW('Progress...'),AT(,,142,59),DOUBLE,GRAY,MDI,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Cancel'),AT(45,42,50,15),USE(?Progress:Cancel),#ORIG(?Progress:Cancel),#ORDINAL(4)
          STRING('1 parm'),AT(119,45),USE(?test),#ORDINAL(5)
        END

[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/07/03' '23:01:53'
[PROCEDURE]
NAME MdiProcess
[COMMON]
FROM ABC Process
MODIFIED '2021/10/27' '15:42:16'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('649a35a0-40e6-48ae-8058-d9b9da885b84')
[FILES]
[PRIMARY]
Orders
[INSTANCE]
0
[KEY]
ORD:KeyOrderDate
[PROMPTS]
%RangeLimitType DEFAULT  ('Current Value')
%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepRealClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 2
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED')
WHEN  ('Process') ('TakeRecord {13}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('')
WHEN  ('WindowToolbar') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (1)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddSortFieldAssistedNoCase DEPEND %AddSortFieldsAssisted LONG TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSortFieldAssistedNoCase DEPEND %AddConditionalSortFieldsAssisted LONG TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

%HotFieldBound DEPEND %HotFields LONG TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?Progress:Cancel') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %ProcessManagerMethodCodeSection
[INSTANCES]
WHEN 'TakeRecord'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3800
PROPERTY:END
loc:sum += ORD:CustNumber + ORD:OrderNumber
[END]
[END]
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
loc:sum       LONG
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9000
PROPERTY:END
IF MiniAppFrame.IsActive()
  MiniAppFrame.InitChild
  MiniAppFrame.SetValue('SUM',loc:sum)  
.  
[END]
[END]
[END]
[END]
[WINDOW]
ProgressWindow WINDOW('Progress...'),AT(,,142,59),DOUBLE,GRAY,MDI,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Cancel'),AT(45,42,50,15),USE(?Progress:Cancel),#ORIG(?Progress:Cancel),#ORDINAL(4)
          STRING('0 parm'),AT(119,45),USE(?test),#ORDINAL(5)
        END

[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/07/03' '23:01:57'
[PROCEDURE]
NAME MdiProcess2Parm
PROTOTYPE '(STRING pStr,STRING pStr2)'
PARAMETERS '(STRING pStr,STRING pStr2)'
[COMMON]
FROM ABC Process
MODIFIED '2021/10/27' '16:00:22'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('cbfa31b7-daea-4888-b653-b32792a4c23f')
[FILES]
[PRIMARY]
Orders
[INSTANCE]
0
[KEY]
ORD:KeyOrderDate
[PROMPTS]
%RangeLimitType DEFAULT  ('Current Value')
%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepRealClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 2
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED')
WHEN  ('Process') ('TakeRecord {13}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('')
WHEN  ('WindowToolbar') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (1)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddSortFieldAssistedNoCase DEPEND %AddSortFieldsAssisted LONG TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSortFieldAssistedNoCase DEPEND %AddConditionalSortFieldsAssisted LONG TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

%HotFieldBound DEPEND %HotFields LONG TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?Progress:Cancel') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %ProcessManagerMethodCodeSection
[INSTANCES]
WHEN 'TakeRecord'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3800
PROPERTY:END
loc:sum += ORD:CustNumber + ORD:OrderNumber + pStr + pStr2  
[END]
[END]
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
loc:sum           LONG
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7300
PROPERTY:END
IF MiniAppFrame.IsActive()
  MiniAppFrame.InitChild
  MiniAppFrame.SetValue('sum',loc:sum)  
.  
[END]
[END]
[END]
[END]
[WINDOW]
ProgressWindow WINDOW('Progress...'),AT(,,142,59),DOUBLE,GRAY,MDI,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Cancel'),AT(45,42,50,15),USE(?Progress:Cancel),#ORIG(?Progress:Cancel),#ORDINAL(4)
          STRING('2 parm'),AT(119,45),USE(?test),#ORDINAL(5)
        END

[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/07/03' '23:02:01'
[PROCEDURE]
NAME MdiProcess3Parm
PROTOTYPE '(STRING pStr,STRING pStr2,STRING pStr3)'
PARAMETERS '(STRING pStr,STRING pStr2,STRING pStr3)'
[COMMON]
FROM ABC Process
MODIFIED '2021/10/27' '16:00:29'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('33906331-8041-41e5-8480-cdad24f16726')
[FILES]
[PRIMARY]
Orders
[INSTANCE]
0
[KEY]
ORD:KeyOrderDate
[PROMPTS]
%RangeLimitType DEFAULT  ('Current Value')
%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepRealClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 2
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED')
WHEN  ('Process') ('TakeRecord {13}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('')
WHEN  ('WindowToolbar') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (1)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddSortFieldAssistedNoCase DEPEND %AddSortFieldsAssisted LONG TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSortFieldAssistedNoCase DEPEND %AddConditionalSortFieldsAssisted LONG TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

%HotFieldBound DEPEND %HotFields LONG TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?Progress:Cancel') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %ProcessManagerMethodCodeSection
[INSTANCES]
WHEN 'TakeRecord'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3800
PROPERTY:END
loc:sum += ORD:CustNumber + ORD:OrderNumber + pStr + pStr2 + pStr3  
[END]
[END]
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
loc:sum           LONG
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7300
PROPERTY:END
IF MiniAppFrame.IsActive()
  MiniAppFrame.InitChild  
  MiniAppFrame.SetValue('sum',loc:sum)  
. 
[END]
[END]
[END]
[END]
[WINDOW]
ProgressWindow WINDOW('Progress...'),AT(,,142,59),DOUBLE,GRAY,MDI,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Cancel'),AT(45,42,50,15),USE(?Progress:Cancel),#ORIG(?Progress:Cancel),#ORDINAL(4)
          STRING('3 parm'),AT(119,45),USE(?test),#ORDINAL(5)
        END

[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/07/04' '21:39:01'
[PROCEDURE]
NAME MdiProcess3ParmSetupThreadSetVariable
PROTOTYPE '(STRING pStr,STRING pStr2,STRING pStr3)'
PARAMETERS '(STRING pStr,STRING pStr2,STRING pStr3)'
[COMMON]
FROM ABC Process
MODIFIED '2021/10/27' '16:01:05'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('70681c72-70fe-408e-851f-13687bb38fc2')
[FILES]
[PRIMARY]
Orders
[INSTANCE]
0
[KEY]
ORD:KeyOrderDate
[PROMPTS]
%RangeLimitType DEFAULT  ('Current Value')
%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepRealClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 2
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED')
WHEN  ('Process') ('TakeRecord {13}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('')
WHEN  ('WindowToolbar') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (1)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddSortFieldAssistedNoCase DEPEND %AddSortFieldsAssisted LONG TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSortFieldAssistedNoCase DEPEND %AddConditionalSortFieldsAssisted LONG TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

%HotFieldBound DEPEND %HotFields LONG TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?Progress:Cancel') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %ProcessManagerMethodCodeSection
[INSTANCES]
WHEN 'TakeRecord'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3800
PROPERTY:END
loc:sum += ORD:CustNumber + ORD:OrderNumber + pStr + pStr2 + pStr3 + loc:val  
[END]
[END]
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Init'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 8550
PROPERTY:END
ProgressWindow{Prop:Timer} = 1                          ! Assign timer interval
[END]
[END]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7300
PROPERTY:END
IF MiniAppFrame.IsActive()
  MiniAppFrame.SetValue('sum',loc:sum)  
.  
[END]
[END]
[END]
EMBED %AdditionalDebugHooks
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  IF MiniAppFrame.IsActive()
    MiniAppFrame.InitChild
    loc:val = MiniAppFrame.GetValue('val')
  .  
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
loc:sum                                 LONG
loc:val                                 LONG
[END]
[END]
[WINDOW]
ProgressWindow WINDOW('Progress...'),AT(,,142,59),DOUBLE,GRAY,MDI,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Cancel'),AT(45,42,50,15),USE(?Progress:Cancel),#ORIG(?Progress:Cancel),#ORDINAL(4)
          STRING('SetVar'),AT(119,45),USE(?test),#ORDINAL(5)
        END

[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/07/05' '12:19:12'
[PROCEDURE]
NAME MdiProcess3ParmSetupThreadNotify
PROTOTYPE '(STRING pStr,STRING pStr2,STRING pStr3)'
PARAMETERS '(STRING pStr,STRING pStr2,STRING pStr3)'
[COMMON]
FROM ABC Process
MODIFIED '2021/10/27' '16:00:49'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('999944ed-2ba3-4c3e-89b8-1bc8185e6c7f')
[FILES]
[PRIMARY]
Orders
[INSTANCE]
0
[KEY]
ORD:KeyOrderDate
[PROMPTS]
%RangeLimitType DEFAULT  ('Current Value')
%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepRealClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 2
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED', |
  'TakeNotify {13}PROCEDURE(UNSIGNED NotifyCode,SIGNED Thread,LONG Parameter),BYTE,PROC,DERIVED')
WHEN  ('Process') ('TakeRecord {13}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('')
WHEN  ('WindowToolbar') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (1)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddSortFieldAssistedNoCase DEPEND %AddSortFieldsAssisted LONG TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSortFieldAssistedNoCase DEPEND %AddConditionalSortFieldsAssisted LONG TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

%HotFieldBound DEPEND %HotFields LONG TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?Progress:Cancel') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %ProcessManagerMethodCodeSection
[INSTANCES]
WHEN 'TakeRecord'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 3800
PROPERTY:END
loc:sum += ORD:CustNumber + ORD:OrderNumber + pStr + pStr2 + pStr3 + loc:val
[END]
[END]
[END]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Init'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 8550
PROPERTY:END
IF MiniAppFrame.IsActive()
  ProgressWindow{Prop:Timer} = 0                          ! Assign timer interval
.  
[END]
[END]
WHEN 'TakeNotify'
[INSTANCES]
WHEN '(UNSIGNED NotifyCode,SIGNED Thread,LONG Parameter),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7500
PROPERTY:END
loc:val = Parameter
ProgressWindow{Prop:Timer} = 1  
[END]
[END]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 7300
PROPERTY:END
IF MiniAppFrame.IsActive()
  MiniAppFrame.InitChild
  MiniAppFrame.SetValue('sum',loc:sum)
.  
[END]
[END]
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
loc:sum                             LONG
loc:val                             LONG
[END]
[END]
[WINDOW]
ProgressWindow WINDOW('Progress... Notify'),AT(,,142,59),DOUBLE,GRAY,MDI,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Cancel'),AT(45,42,50,15),USE(?Progress:Cancel),#ORIG(?Progress:Cancel),#ORDINAL(4)
          STRING('Notify'),AT(119,45),USE(?test),#ORDINAL(5)
        END

[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/10/21' '22:58:54'
[PROCEDURE]
NAME ParallelTests
[COMMON]
FROM ABC Source
MODIFIED '2021/10/27' '15:53:39'
[PROMPTS]
%GenerateOpenClose LONG  (0)
%GenerateSaveRestore LONG  (0)
[EMBED]
EMBED %AdditionalDebugHooks
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
  MiniAppFrame.DebugView('Starting '&n&' threads') 
  LOOP n TIMES
    RESUME(START(Tests))
  .  
  
  LOOP
    MiniAppFrame.Sleep(50) !0.50 seconds
    IF NOT MiniAppFrame.GetActiveThreads() THEN 
      BREAK
    .
  .
  
  MiniAppFrame.Kill
  MiniAppFrame.DebugView('All tests done.') 
  
[END]
EMBED %DataSection
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 1300
PROPERTY:END
n                       LONG(10)
[END]
[END]
[END]
[MODULE]
[COMMON]
FROM ABC GENERATED
MODIFIED '2021/10/30' '22:14:30'
[PROCEDURE]
NAME MdiProcessStructures
[COMMON]
FROM ABC Process
MODIFIED '2021/10/30' '22:17:40'
[DATA]
Progress:Thermometer     BYTE
!!> GUID('1b14bcbf-b811-490f-ba63-7a0a3ee337b0')
[FILES]
[PRIMARY]
Orders
[INSTANCE]
0
[KEY]
ORD:KeyOrderDate
[PROMPTS]
%RangeLimitType DEFAULT  ('Current Value')
%ClassItem UNIQUE DEFAULT  ('Default', 'Process', 'ProgressMgr', 'WindowToolbar')
%DefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ReportManager')
WHEN  ('Process') ('ProcessClass')
WHEN  ('ProgressMgr') ('StepClass')

%ActualDefaultBaseClassType DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('StepRealClass')

%ClassLines DEPEND %ClassItem MULTI DEFAULT TIMES 1
WHEN  ('Default') ('Init {19}PROCEDURE(),BYTE,PROC,DERIVED', 'Kill {19}PROCEDURE(),BYTE,PROC,DERIVED')

%ReturnValue FIELD  ()
%ProcedureOneInstance LONG  (0)
%WindowOperationMode DEFAULT  ('Use WINDOW setting')
%INISaveWindow LONG  (0)
%ProcedureDisableEnhanceFocus LONG  (0)
%ProcedureUseEnterInsteadTabOverride LONG  (0)
%WindowUseEnterInsteadTab LONG  (1)
%ProcedureUseEnterInsteadTabExcludeListCombo LONG  (0)
%ProcedureUseEnterInsteadTabEnableNextTabStop LONG  (0)
%ProcedureUseEnterInsteadTabExcludeG LONG  (1)
%WindowUseEnterInsteadTabExclude MULTI DEFAULT  ()
%GlobalObject DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('NO')
WHEN  ('Process') ('NO')
WHEN  ('ProgressMgr') ('NO')
WHEN  ('WindowToolbar') ('NO')

%ThisObjectName DEPEND %ClassItem DEFAULT TIMES 3
WHEN  ('Default') ('ThisWindow')
WHEN  ('Process') ('ThisProcess')
WHEN  ('ProgressMgr') ('ProgressMgr')

%UseDefaultABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%UseABCBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (1)
WHEN  ('Process') (1)
WHEN  ('ProgressMgr') (1)
WHEN  ('WindowToolbar') (1)

%ABCBaseClass DEPEND %ClassItem DEFAULT TIMES 4
WHEN  ('Default') ('')
WHEN  ('Process') ('')
WHEN  ('ProgressMgr') ('')
WHEN  ('WindowToolbar') ('')

%ExtBaseClass DEPEND %ClassItem DEFAULT TIMES 0

%BaseClassIncludeFile DEPEND %ClassItem DEFAULT TIMES 0

%DeriveFromBaseClass DEPEND %ClassItem LONG TIMES 4
WHEN  ('Default') (0)
WHEN  ('Process') (0)
WHEN  ('ProgressMgr') (0)
WHEN  ('WindowToolbar') (0)

%NewMethods DEPEND %ClassItem MULTI LONG TIMES 0

%NewMethodName DEPEND %NewMethods DEFAULT TIMES 0

%NewMethodPrototype DEPEND %NewMethods DEFAULT TIMES 0

%NewClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%NewClassProperty DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataType DEPEND %NewClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%NewClassOtherType DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataIsRef DEPEND %NewClassPropertyItems LONG TIMES 0

%NewClassDataSize DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim1 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim2 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim3 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%NewClassDataDim4 DEPEND %NewClassPropertyItems DEFAULT TIMES 0

%ClassMethods DEPEND %ClassItem MULTI LONG TIMES 0

%ClassMethodName DEPEND %ClassMethods DEFAULT TIMES 0

%ClassMethodPrototype DEPEND %ClassMethods DEFAULT TIMES 0

%ClassPropertyItems DEPEND %ClassItem MULTI LONG TIMES 0

%ClassProperty DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataType DEPEND %ClassPropertyItems DEFAULT TIMES 1
WHEN  ('ProgressMgr')TIMES 0

%ClassOtherType DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataIsRef DEPEND %ClassPropertyItems LONG TIMES 0

%ClassDataSize DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim1 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim2 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim3 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%ClassDataDim4 DEPEND %ClassPropertyItems DEFAULT TIMES 0

%WindowStyles MULTI LONG  ()
%WindowStyleFontName DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontNameIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontSize DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontSizeIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontStyle DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontStyleIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleFontColor DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleFontCharSet DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormal DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundNormalVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundNormalIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleForegroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleForegroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelected DEPEND %WindowStyles LONG TIMES 0

%WindowStyleBackgroundSelectedVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStyleBackgroundSelectedIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStylePicture DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureVariable DEPEND %WindowStyles DEFAULT TIMES 0

%WindowStylePictureIsVariable DEPEND %WindowStyles LONG TIMES 0

%WindowStyleOtherListboxes MULTI DEFAULT  ()
%ProcedureAutoBindFields MULTI LONG  ()
%ProcedureAutoBindField DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindFieldTPL DEPEND %ProcedureAutoBindFields DEFAULT TIMES 0

%ProcedureAutoBindProcedures MULTI LONG  ()
%ProcedureAutoBindProcedure DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindProcedureTPL DEPEND %ProcedureAutoBindProcedures DEFAULT TIMES 0

%ProcedureAutoBindFieldsIgnored MULTI LONG  ()
%ProcedureAutoBindFieldIgnored DEPEND %ProcedureAutoBindFieldsIgnored DEFAULT TIMES 0

%ProcedureAutoBindProceduresIgnored MULTI LONG  ()
%ProcedureAutoBindProcedureIgnored DEPEND %ProcedureAutoBindProceduresIgnored DEFAULT TIMES 0

%ProcedureAutoBindValidToAddField LONG  (0)
%ProcedureUserBindFields MULTI LONG  ()
%ProcedureUserBindField DEPEND %ProcedureUserBindFields FIELD TIMES 0

%ProcedureAutoBindFieldIgnore DEPEND %ProcedureAutoBindFields LONG TIMES 0

%ProcedureUserBindProcedures MULTI LONG  ()
%ProcedureUserBindProcedure DEPEND %ProcedureUserBindProcedures PROCEDURE TIMES 0

%ProcedureAutoBindProcedureIgnore DEPEND %ProcedureAutoBindProcedures LONG TIMES 0

%ProcedureUserBindExpressions MULTI LONG  ()
%ProcedureUserBindExpressionName DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%ProcedureUserBindExpression DEPEND %ProcedureUserBindExpressions DEFAULT TIMES 0

%PreserveVarsLoc MULTI LONG  ()
%PreserveVarLoc DEPEND %PreserveVarsLoc DEFAULT TIMES 0

%ReportDataSource DEFAULT  ('File')
%WindowMessage DEFAULT  ('')
%ProcessAction DEFAULT  ('No record action')
%UseProcessActionToTitle LONG  (1)
%RIProcessAction LONG  (0)
%UseMRP LONG  (1)
%QueryDelete LONG  (0)
%MDIProgressWindow LONG  (1)
%ProgressInterval DEFAULT  ('10')
%EnableQuickScan LONG  (1)
%RecordFilter DEFAULT  ('')
%AdditionalSortType DEFAULT  ('Manual')
%AddSortFields DEFAULT  ('')
%AddSortFieldsAssisted MULTI LONG  ()
%AddSortFieldAssisted DEPEND %AddSortFieldsAssisted FIELD TIMES 0

%AddSortFieldAssistedOrder DEPEND %AddSortFieldsAssisted DEFAULT TIMES 0

%AddSortFieldAssistedNoCase DEPEND %AddSortFieldsAssisted LONG TIMES 0

%AddConditionalSort MULTI LONG  ()
%AddConditionalSortCondition DEPEND %AddConditionalSort DEFAULT TIMES 0

%AddConditionalSortFieldsAssisted DEPEND %AddConditionalSort MULTI LONG TIMES 0

%AddConditionalSortFieldAssisted DEPEND %AddConditionalSortFieldsAssisted FIELD TIMES 0

%AddConditionalSortFieldAssistedOrder DEPEND %AddConditionalSortFieldsAssisted DEFAULT TIMES 0

%AddConditionalSortFieldAssistedNoCase DEPEND %AddConditionalSortFieldsAssisted LONG TIMES 0

%AddSortDynamicNamed MULTI LONG  ()
%AddSortFieldDinNameDescription DEPEND %AddSortDynamicNamed DEFAULT TIMES 0

%AddSortFieldsDinName DEPEND %AddSortDynamicNamed MULTI LONG TIMES 0

%AddSortFieldDinName DEPEND %AddSortFieldsDinName FIELD TIMES 0

%AddSortFieldDinNameOrder DEPEND %AddSortFieldsDinName DEFAULT TIMES 0

%AddSortFieldsDinSort MULTI LONG  ()
%AddSortFieldDinSortDescription DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AddSortFieldDinSort DEPEND %AddSortFieldsDinSort FIELD TIMES 0

%AddSortFieldDinSortOrder DEPEND %AddSortFieldsDinSort DEFAULT TIMES 0

%AdditionalSortWindowTitle DEFAULT  ('Select the Order')
%AdditionalSortWindowMessage DEFAULT  ('Select the order to process the data.')
%AdditionalSortWindowOkButtonText DEFAULT  ('&OK')
%AdditionalSortWindowOkButtonIcon DEFAULT  ('SOK.ICO')
%AdditionalSortWindowOkButtonCursor DEFAULT  ('')
%AdditionalSortWindowOkButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowOkButtonMsg DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonTip DEFAULT  ('Accept data and close the window')
%AdditionalSortWindowOkButtonFlat LONG  (1)
%AdditionalSortWindowOkButtonSkip LONG  (0)
%AdditionalSortWindowOkButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowCancelButtonText DEFAULT  ('&Cancel')
%AdditionalSortWindowCancelButtonIcon DEFAULT  ('SCANCEL.ICO')
%AdditionalSortWindowCancelButtonCursor DEFAULT  ('')
%AdditionalSortWindowCancelButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowCancelButtonMsg DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonTip DEFAULT  ('Cancel operation')
%AdditionalSortWindowCancelButtonFlat LONG  (1)
%AdditionalSortWindowCancelButtonSkip LONG  (0)
%AdditionalSortWindowCancelButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowUpButtonText DEFAULT  ('')
%AdditionalSortWindowUpButtonIcon DEFAULT  ('SUP.ICO')
%AdditionalSortWindowUpButtonCursor DEFAULT  ('')
%AdditionalSortWindowUpButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowUpButtonMsg DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonTip DEFAULT  ('Move field up')
%AdditionalSortWindowUpButtonFlat LONG  (1)
%AdditionalSortWindowUpButtonSkip LONG  (0)
%AdditionalSortWindowUpButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowDownButtonText DEFAULT  ('')
%AdditionalSortWindowDownButtonIcon DEFAULT  ('SDOWN.ICO')
%AdditionalSortWindowDownButtonCursor DEFAULT  ('')
%AdditionalSortWindowDownButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowDownButtonMsg DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonTip DEFAULT  ('Move field down')
%AdditionalSortWindowDownButtonFlat LONG  (1)
%AdditionalSortWindowDownButtonSkip LONG  (0)
%AdditionalSortWindowDownButtonJustification DEFAULT  ('Left')
%AdditionalSortWindowChOrdButtonText DEFAULT  ('')
%AdditionalSortWindowChOrdButtonIcon DEFAULT  ('SCH-ORD.ICO')
%AdditionalSortWindowChOrdButtonCursor DEFAULT  ('')
%AdditionalSortWindowChOrdButtonKeyCode DEFAULT  ('')
%AdditionalSortWindowChOrdButtonMsg DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonTip DEFAULT  ('Change Order')
%AdditionalSortWindowChOrdButtonFlat LONG  (1)
%AdditionalSortWindowChOrdButtonSkip LONG  (0)
%AdditionalSortWindowChOrdButtonJustification DEFAULT  ('Left')
%ApproxRecordCount DEFAULT  ('')
%ManuallySetProgressLimits LONG  (0)
%LowLimit DEFAULT  ('')
%HighLimit DEFAULT  ('')
%RangeField COMPONENT  ()
%HigherKeys MULTI LONG  ()
%HigherKey DEPEND %HigherKeys COMPONENT TIMES 0

%HigherKeyField DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueType DEPEND %HigherKeys DEFAULT TIMES 0

%HigherKeyValueVariable DEPEND %HigherKeys FIELD TIMES 0

%HigherKeyValueFixed DEPEND %HigherKeys DEFAULT TIMES 0

%RangeLimit FIELD  ()
%RangeLow FIELD  ()
%RangeHigh FIELD  ()
%RangeFile FILE  ()
%HotFields MULTI LONG  ()
%HotField DEPEND %HotFields FIELD TIMES 0

%HotFieldBound DEPEND %HotFields LONG TIMES 0

%ExtUITabIcon DEPEND %Control DEFAULT TIMES 0

%ExtUITabStyleOverrideGlobal DEPEND %Control LONG TIMES 0

%ExtUITabStyle DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Default')
WHEN  ('?Progress:Cancel') ('Default')

%FieldGradientColorType DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('Off')
WHEN  ('?Progress:Cancel') ('Off')

%FieldGradientColorTypeVariable DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('')
WHEN  ('?Progress:Cancel') ('')

%FieldGradientColorTypeIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorFrom DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorFromVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorFromIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%FieldGradientColorTo DEPEND %Control LONG TIMES 2
WHEN  ('') (-1)
WHEN  ('?Progress:Cancel') (-1)

%FieldGradientColorToVariable DEPEND %Control DEFAULT TIMES 0

%FieldGradientColorToIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%ButtonAction DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('No Special Action')
WHEN  ('?Progress:Cancel') ('No Special Action')

%ButtonRunName DEPEND %Control DEFAULT TIMES 0

%ButtonRunParameters DEPEND %Control DEFAULT TIMES 0

%ButtonProcedure DEPEND %Control PROCEDURE TIMES 0

%ButtonThread DEPEND %Control LONG TIMES 0

%ButtonThreadStack DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('25000')
WHEN  ('?Progress:Cancel') ('25000')

%ButtonParameters DEPEND %Control DEFAULT TIMES 0

%ButtonReturnValueAssignment DEPEND %Control FIELD TIMES 0

%ButtonReturnValueReferenceAssign DEPEND %Control LONG TIMES 0

%ButtonRequest DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('None')
WHEN  ('?Progress:Cancel') ('None')

%ButtonThreadParameters DEPEND %Control DEFAULT TIMES 0

%ButtonThreadReturnValueAssignment DEPEND %Control FIELD TIMES 0

%PreLookupKey DEPEND %Control KEY TIMES 0

%PreLookupField DEPEND %Control COMPONENT TIMES 0

%PreLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PreLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupKey DEPEND %Control KEY TIMES 0

%PostLookupField DEPEND %Control COMPONENT TIMES 0

%PostLookupProcedure DEPEND %Control PROCEDURE TIMES 0

%PostLookupProcedureParameters DEPEND %Control DEFAULT TIMES 0

%PostLookupDuringValidate DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%LookupAssign DEPEND %Control MULTI LONG TIMES 0

%MoreTarget DEPEND %LookupAssign FIELD TIMES 0

%MoreField DEPEND %LookupAssign DEFAULT TIMES 0

%ForceWindowRefresh DEPEND %Control LONG TIMES 0

%CheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%CheckedAssignVariable DEPEND %CheckedAssigns FIELD TIMES 0

%CheckedAssignValue DEPEND %CheckedAssigns DEFAULT TIMES 0

%CheckedHides DEPEND %Control MULTI LONG TIMES 0

%CheckedControl DEPEND %CheckedHides DEFAULT TIMES 0

%CheckedControlAction DEPEND %CheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedEnables DEPEND %Control MULTI LONG TIMES 0

%CheckedControl1 DEPEND %CheckedEnables DEFAULT TIMES 0

%CheckedControl1Action DEPEND %CheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UncheckedAssigns DEPEND %Control MULTI LONG TIMES 0

%UncheckedAssignVariable DEPEND %UncheckedAssigns FIELD TIMES 0

%UncheckedAssignValue DEPEND %UncheckedAssigns DEFAULT TIMES 0

%UnCheckedHides DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl DEPEND %UnCheckedHides DEFAULT TIMES 0

%UnCheckedControlAction DEPEND %UnCheckedHides DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedEnables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedControl1 DEPEND %UnCheckedEnables DEFAULT TIMES 0

%UnCheckedControl1Action DEPEND %UnCheckedEnables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%CheckedDisables DEPEND %Control MULTI LONG TIMES 0

%CheckedDisableControl DEPEND %CheckedDisables DEFAULT TIMES 0

%CheckedDisableControlAction DEPEND %CheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%UnCheckedDisables DEPEND %Control MULTI LONG TIMES 0

%UnCheckedDisableControl DEPEND %UnCheckedDisables DEFAULT TIMES 0

%UnCheckedDisableControlAction DEPEND %UnCheckedDisables DEFAULT TIMES 2
WHEN  ('')TIMES 0
WHEN  ('?Progress:Cancel')TIMES 0

%ActiveImageEnable DEPEND %Control LONG TIMES 0

%AIObjectName DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('AIBtn0')
WHEN  ('?Progress:Cancel') ('AIBtn4')

%AIEnableMimicControl DEPEND %Control LONG TIMES 2
WHEN  ('') (1)
WHEN  ('?Progress:Cancel') (1)

%AIMimicControl DEPEND %Control DEFAULT TIMES 2
WHEN  ('') ('?Progress:Thermometer')
WHEN  ('?Progress:Cancel') ('?Progress:Thermometer')

%AIImgRound DEPEND %Control LONG TIMES 0

%AIOverrideImg DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgVariable DEPEND %Control DEFAULT TIMES 0

%AIOverrideImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIDisableImg DEPEND %Control DEFAULT TIMES 0

%AIDisableImgVariable DEPEND %Control DEFAULT TIMES 0

%AIDisableImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIHotImg DEPEND %Control DEFAULT TIMES 0

%AIHotImgVariable DEPEND %Control DEFAULT TIMES 0

%AIHotImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

%AIPressedImg DEPEND %Control DEFAULT TIMES 0

%AIPressedImgVariable DEPEND %Control DEFAULT TIMES 0

%AIPressedImgIsVariable DEPEND %Control LONG TIMES 2
WHEN  ('') (0)
WHEN  ('?Progress:Cancel') (0)

[EMBED]
EMBED %WindowManagerMethodCodeSection
[INSTANCES]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 9000
PROPERTY:END
IF MiniAppFrame.IsActive()
  
  MiniAppFrame.InitChild    
  
  MiniAppFrame.SetValue('TestString',MiniAppFrame.GetValue('TestString')&'GHI')
  MiniAppFrame.SetValue('TestNumber',MiniAppFrame.GetValue('TestNumber')+.009012)
  MiniAppFrame.SetValue('TestDate',MiniAppFrame.GetValue('TestDate')+7)
  MiniAppFrame.SetValue('TestTime',MiniAppFrame.GetValue('TestTime')+500)

  MiniAppFrame.RetrieveGroup('TestGroup1',LocalGroup)
  LocalGroup.TestString = CLIP(LocalGroup.TestString)&'JKL'
  LocalGroup.TestNumber += .009024
  LocalGroup.TestDate += 14
  LocalGroup.TestTime += 1000
    
  MiniAppFrame.StoreGroup('TestGroup1',LocalGroup)
  MiniAppFrame.StoreGroup('TestGroup2',LocalGroup)

  MiniAppFrame.RetrieveQueue('TestQ1',LocalQueue)
  GET(LocalQueue,2)
  LocalQueue.TestNumber += 1000
  LocalQueue.TestString = CLIP(LocalQueue.TestString)&'xyz'
  PUT(LocalQueue)
  MiniAppFrame.StoreQueue('TestQ1',LocalQueue)

.  
[END]
[END]
[END]
EMBED %WindowManagerMethodDataSection
[INSTANCES]
WHEN 'Kill'
[INSTANCES]
WHEN '(),BYTE'
[DEFINITION]
[SOURCE]
PROPERTY:BEGIN
PRIORITY 5000
PROPERTY:END
LocalGroup        LIKE(TestGroup)
LocalQueue        QUEUE(TestQueue)
                  END
[END]
[END]
[END]
[END]
[WINDOW]
ProgressWindow WINDOW('Progress...'),AT(,,142,59),DOUBLE,GRAY,MDI,TIMER(1)
          PROGRESS,AT(15,15,111,12),USE(Progress:Thermometer),RANGE(0,100),#ORIG(Progress:Thermometer), |
            #ORDINAL(1)
          STRING(''),AT(0,3,141,10),USE(?Progress:UserString),CENTER,#ORIG(?Progress:UserString), |
            #ORDINAL(2)
          STRING(''),AT(0,30,141,10),USE(?Progress:PctText),CENTER,#ORIG(?Progress:PctText), |
            #ORDINAL(3)
          BUTTON('Cancel'),AT(45,42,50,15),USE(?Progress:Cancel),#ORIG(?Progress:Cancel),#ORDINAL(4)
          STRING('0 parm'),AT(119,45),USE(?test),#ORDINAL(5)
        END

[END]
